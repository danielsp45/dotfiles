"use strict";(globalThis.webpackChunknotion_next=globalThis.webpackChunknotion_next||[]).push([[90501],{90501:(e,n,t)=>{t.r(n),t.d(n,{render:()=>E});var r=()=>t(20113),i=()=>t(64595),a=()=>t(414075),o=()=>t(300697),d=new Map,s=new Map,c=new Map,g=(0,i().K2)((()=>{s.clear(),c.clear(),d.clear()}),"clear"),l=(0,i().K2)(((e,n)=>{const t=s.get(n)||[];return i().Rm.trace("In isDescendant",n," ",e," = ",t.includes(e)),t.includes(e)}),"isDescendant"),f=(0,i().K2)(((e,n)=>{const t=s.get(n)||[];return i().Rm.info("Descendants of ",n," is ",t),i().Rm.info("Edge is ",e),e.v!==n&&e.w!==n&&(t?t.includes(e.v)||l(e.v,n)||l(e.w,n)||t.includes(e.w):(i().Rm.debug("Tilt, ",n,",not in descendants"),!1))}),"edgeInCluster"),h=(0,i().K2)(((e,n,t,r)=>{i().Rm.warn("Copying children of ",e,"root",r,"data",n.node(e),r);const a=n.children(e)||[];e!==r&&a.push(e),i().Rm.warn("Copying (nodes) clusterId",e,"nodes",a),a.forEach((a=>{if(n.children(a).length>0)h(a,n,t,r);else{const o=n.node(a);i().Rm.info("cp ",a," to ",r," with parent ",e),t.setNode(a,o),r!==n.parent(a)&&(i().Rm.warn("Setting parent",a,n.parent(a)),t.setParent(a,n.parent(a))),e!==r&&a!==e?(i().Rm.debug("Setting parent",a,e),t.setParent(a,e)):(i().Rm.info("In copy ",e,"root",r,"data",n.node(e),r),i().Rm.debug("Not Setting parent for node=",a,"cluster!==rootId",e!==r,"node!==clusterId",a!==e));const d=n.edges(a);i().Rm.debug("Copying Edges",d),d.forEach((a=>{i().Rm.info("Edge",a);const o=n.edge(a.v,a.w,a.name);i().Rm.info("Edge data",o,r);try{f(a,r)?(i().Rm.info("Copying as ",a.v,a.w,o,a.name),t.setEdge(a.v,a.w,o,a.name),i().Rm.info("newGraph edges ",t.edges(),t.edge(t.edges()[0]))):i().Rm.info("Skipping copy of edge ",a.v,"--\x3e",a.w," rootId: ",r," clusterId:",e)}catch(d){i().Rm.error(d)}}))}i().Rm.debug("Removing node",a),n.removeNode(a)}))}),"copy"),u=(0,i().K2)(((e,n)=>{const t=n.children(e);let r=[...t];for(const i of t)c.set(i,e),r=[...r,...u(i,n)];return r}),"extractDescendants"),p=(0,i().K2)(((e,n,t)=>{const r=e.edges().filter((e=>e.v===n||e.w===n)),i=e.edges().filter((e=>e.v===t||e.w===t)),a=r.map((e=>({v:e.v===n?t:e.v,w:e.w===n?n:e.w}))),o=i.map((e=>({v:e.v,w:e.w})));return a.filter((e=>o.some((n=>e.v===n.v&&e.w===n.w))))}),"findCommonEdges"),m=(0,i().K2)(((e,n,t)=>{const r=n.children(e);if(i().Rm.trace("Searching children of id ",e,r),r.length<1)return e;let a;for(const i of r){const e=m(i,n,t),r=p(n,t,e);if(e){if(!(r.length>0))return e;a=e}}return a}),"findNonClusterChild"),w=(0,i().K2)((e=>d.has(e)&&d.get(e).externalConnections&&d.has(e)?d.get(e).id:e),"getAnchorId"),R=(0,i().K2)(((e,n)=>{if(!e||n>10)i().Rm.debug("Opting out, no graph ");else{i().Rm.debug("Opting in, graph "),e.nodes().forEach((function(n){e.children(n).length>0&&(i().Rm.warn("Cluster identified",n," Replacement id in edges: ",m(n,e,n)),s.set(n,u(n,e)),d.set(n,{id:m(n,e,n),clusterData:e.node(n)}))})),e.nodes().forEach((function(n){const t=e.children(n),r=e.edges();t.length>0?(i().Rm.debug("Cluster identified",n,s),r.forEach((e=>{l(e.v,n)^l(e.w,n)&&(i().Rm.warn("Edge: ",e," leaves cluster ",n),i().Rm.warn("Descendants of XXX ",n,": ",s.get(n)),d.get(n).externalConnections=!0)}))):i().Rm.debug("Not a cluster ",n,s)}));for(let n of d.keys()){const t=d.get(n).id,r=e.parent(t);r!==n&&d.has(r)&&!d.get(r).externalConnections&&(d.get(n).id=r)}e.edges().forEach((function(n){const t=e.edge(n);i().Rm.warn("Edge "+n.v+" -> "+n.w+": "+JSON.stringify(n)),i().Rm.warn("Edge "+n.v+" -> "+n.w+": "+JSON.stringify(e.edge(n)));let r=n.v,a=n.w;if(i().Rm.warn("Fix XXX",d,"ids:",n.v,n.w,"Translating: ",d.get(n.v)," --- ",d.get(n.w)),d.get(n.v)||d.get(n.w)){if(i().Rm.warn("Fixing and trying - removing XXX",n.v,n.w,n.name),r=w(n.v),a=w(n.w),e.removeEdge(n.v,n.w,n.name),r!==n.v){const i=e.parent(r);d.get(i).externalConnections=!0,t.fromCluster=n.v}if(a!==n.w){const r=e.parent(a);d.get(r).externalConnections=!0,t.toCluster=n.w}i().Rm.warn("Fix Replacing with XXX",r,a,n.name),e.setEdge(r,a,t,n.name)}})),i().Rm.warn("Adjusted Graph",a().M(e)),v(e,0),i().Rm.trace(d)}}),"adjustClustersAndEdges"),v=(0,i().K2)(((e,n)=>{if(i().Rm.warn("extractor - ",n,a().M(e),e.children("D")),n>10)return void i().Rm.error("Bailing out");let t=e.nodes(),r=!1;for(const i of t){const n=e.children(i);r=r||n.length>0}if(r){i().Rm.debug("Nodes = ",t,n);for(const r of t)if(i().Rm.debug("Extracting node",r,d,d.has(r)&&!d.get(r).externalConnections,!e.parent(r),e.node(r),e.children("D")," Depth ",n),d.has(r))if(!d.get(r).externalConnections&&e.children(r)&&e.children(r).length>0){i().Rm.warn("Cluster without external connections, without a parent and with children",r,n);let t="TB"===e.graph().rankdir?"LR":"TB";d.get(r)?.clusterData?.dir&&(t=d.get(r).clusterData.dir,i().Rm.warn("Fixing dir",d.get(r).clusterData.dir,t));const s=new(o().T)({multigraph:!0,compound:!0}).setGraph({rankdir:t,nodesep:50,ranksep:50,marginx:8,marginy:8}).setDefaultEdgeLabel((function(){return{}}));i().Rm.warn("Old graph before copy",a().M(e)),h(r,e,s,r),e.setNode(r,{clusterNode:!0,id:r,clusterData:d.get(r).clusterData,label:d.get(r).label,graph:s}),i().Rm.warn("New graph after copy node: (",r,")",a().M(s)),i().Rm.debug("Old graph after copy",a().M(e))}else i().Rm.warn("Cluster ** ",r," **not meeting the criteria !externalConnections:",!d.get(r).externalConnections," no parent: ",!e.parent(r)," children ",e.children(r)&&e.children(r).length>0,e.children("D"),n),i().Rm.debug(d);else i().Rm.debug("Not a cluster",r,n);t=e.nodes(),i().Rm.warn("New list of nodes",t);for(const r of t){const t=e.node(r);i().Rm.warn(" Now next level",r,t),t?.clusterNode&&v(t.graph,n+1)}}else i().Rm.debug("Done, no node has children",e.nodes())}),"extractor"),y=(0,i().K2)(((e,n)=>{if(0===n.length)return[];let t=Object.assign([],n);return n.forEach((n=>{const r=e.children(n),i=y(e,r);t=[...t,...i]})),t}),"sorter"),X=(0,i().K2)((e=>y(e,e.children())),"sortNodesByHierarchy"),b=(0,i().K2)((async(e,n,o,s,c,g)=>{i().Rm.warn("Graph in recursive render:XAX",a().M(n),c);const l=n.graph().rankdir;i().Rm.trace("Dir in recursive render - dir:",l);const f=e.insert("g").attr("class","root");n.nodes()?i().Rm.info("Recursive render XXX",n.nodes()):i().Rm.info("No nodes found for",n),n.edges().length>0&&i().Rm.info("Recursive edges",n.edge(n.edges()[0]));const h=f.insert("g").attr("class","clusters"),u=f.insert("g").attr("class","edgePaths"),p=f.insert("g").attr("class","edgeLabels"),w=f.insert("g").attr("class","nodes");await Promise.all(n.nodes().map((async function(e){const t=n.node(e);if(void 0!==c){const t=JSON.parse(JSON.stringify(c.clusterData));i().Rm.trace("Setting data for parent cluster XXX\n Node.id = ",e,"\n data=",t.height,"\nParent cluster",c.height),n.setNode(c.id,t),n.parent(e)||(i().Rm.trace("Setting parent",e,c.id),n.setParent(e,c.id,t))}if(i().Rm.info("(Insert) Node XXX"+e+": "+JSON.stringify(n.node(e))),t?.clusterNode){i().Rm.info("Cluster identified XBX",e,t.width,n.node(e));const{ranksep:a,nodesep:d}=n.graph();t.graph.setGraph({...t.graph.graph(),ranksep:a+25,nodesep:d});const c=await b(w,t.graph,o,s,n.node(e),g),l=c.elem;(0,r().lC)(t,l),t.diff=c.diff||0,i().Rm.info("New compound node after recursive render XAX",e,"width",t.width,"height",t.height),(0,r().U7)(l,t)}else n.children(e).length>0?(i().Rm.trace("Cluster - the non recursive path XBX",e,t.id,t,t.width,"Graph:",n),i().Rm.trace(m(t.id,n)),d.set(t.id,{id:m(t.id,n),node:t})):(i().Rm.trace("Node - the non recursive path XAX",e,w,n.node(e),l),await(0,r().on)(w,n.node(e),{config:g,dir:l}))})));const R=(0,i().K2)((async()=>{const e=n.edges().map((async function(e){const t=n.edge(e.v,e.w,e.name);i().Rm.info("Edge "+e.v+" -> "+e.w+": "+JSON.stringify(e)),i().Rm.info("Edge "+e.v+" -> "+e.w+": ",e," ",JSON.stringify(n.edge(e))),i().Rm.info("Fix",d,"ids:",e.v,e.w,"Translating: ",d.get(e.v),d.get(e.w)),await(0,r().jP)(p,t)}));await Promise.all(e)}),"processEdges");await R(),i().Rm.info("Graph before layout:",JSON.stringify(a().M(n))),i().Rm.info("############################################# XXX"),i().Rm.info("###                Layout                 ### XXX"),i().Rm.info("############################################# XXX"),(0,t(962334).Zp)(n),i().Rm.info("Graph after layout:",JSON.stringify(a().M(n)));let v=0,{subGraphTitleTotalMargin:y}=(0,t(767750).O)(g);return await Promise.all(X(n).map((async function(e){const t=n.node(e);if(i().Rm.info("Position XBX => "+e+": ("+t.x,","+t.y,") width: ",t.width," height: ",t.height),t?.clusterNode)t.y+=y,i().Rm.info("A tainted cluster node XBX1",e,t.id,t.width,t.height,t.x,t.y,n.parent(e)),d.get(t.id).node=t,(0,r().U_)(t);else if(n.children(e).length>0){i().Rm.info("A pure cluster node XBX1",e,t.id,t.x,t.y,t.width,t.height,n.parent(e)),t.height+=y,n.node(t.parentId);const a=t?.padding/2||0,o=t?.labelBBox?.height||0,s=o-a||0;i().Rm.debug("OffsetY",s,"labelHeight",o,"halfPadding",a),await(0,r().U)(h,t),d.get(t.id).node=t}else{const e=n.node(t.parentId);t.y+=y/2,i().Rm.info("A regular node XBX1 - using the padding",t.id,"parent",t.parentId,t.width,t.height,t.x,t.y,"offsetY",t.offsetY,"parent",e,e?.offsetY,t),(0,r().U_)(t)}}))),n.edges().forEach((function(e){const t=n.edge(e);i().Rm.info("Edge "+e.v+" -> "+e.w+": "+JSON.stringify(t),t),t.points.forEach((e=>e.y+=y/2));const a=n.node(e.v);var c=n.node(e.w);const g=(0,r().Jo)(u,t,d,o,a,c,s);(0,r().T_)(t,g)})),n.nodes().forEach((function(e){const t=n.node(e);i().Rm.info(e,t.type,t.diff),t.isGroup&&(v=t.diff)})),i().Rm.warn("Returning from recursive render XAX",f,v),{elem:f,diff:v}}),"recursiveRender"),E=(0,i().K2)((async(e,n)=>{const t=new(o().T)({multigraph:!0,compound:!0}).setGraph({rankdir:e.direction,nodesep:e.config?.nodeSpacing||e.config?.flowchart?.nodeSpacing||e.nodeSpacing,ranksep:e.config?.rankSpacing||e.config?.flowchart?.rankSpacing||e.rankSpacing,marginx:8,marginy:8}).setDefaultEdgeLabel((function(){return{}})),d=n.select("g");(0,r().g0)(d,e.markers,e.type,e.diagramId),(0,r().nA)(),(0,r().gh)(),(0,r().IU)(),g(),e.nodes.forEach((e=>{t.setNode(e.id,{...e}),e.parentId&&t.setParent(e.id,e.parentId)})),i().Rm.debug("Edges:",e.edges),e.edges.forEach((e=>{if(e.start===e.end){const n=e.start,r=n+"---"+n+"---1",i=n+"---"+n+"---2",a=t.node(n);t.setNode(r,{domId:r,id:r,parentId:a.parentId,labelStyle:"",label:"",padding:0,shape:"labelRect",style:"",width:10,height:10}),t.setParent(r,a.parentId),t.setNode(i,{domId:i,id:i,parentId:a.parentId,labelStyle:"",padding:0,shape:"labelRect",label:"",style:"",width:10,height:10}),t.setParent(i,a.parentId);const o=structuredClone(e),d=structuredClone(e),s=structuredClone(e);o.label="",o.arrowTypeEnd="none",o.id=n+"-cyclic-special-1",d.arrowTypeEnd="none",d.id=n+"-cyclic-special-mid",s.label="",a.isGroup&&(o.fromCluster=n,s.toCluster=n),s.id=n+"-cyclic-special-2",t.setEdge(n,r,o,n+"-cyclic-special-0"),t.setEdge(r,i,d,n+"-cyclic-special-1"),t.setEdge(i,n,s,n+"-cyc<lic-special-2")}else t.setEdge(e.start,e.end,{...e},e.id)})),i().Rm.warn("Graph at first:",JSON.stringify(a().M(t))),R(t),i().Rm.warn("Graph after XAX:",JSON.stringify(a().M(t)));const s=(0,i().D7)();await b(d,t,e.type,e.diagramId,void 0,s)}),"render")},250053:(e,n,t)=>{t.d(n,{A:()=>r});const r=function(e){return(0,t(668675).A)(e,4)}},414075:(e,n,t)=>{t.d(n,{M:()=>o});var r=()=>t(269592),i=()=>t(250053),a=()=>t(474722);function o(e){var n={options:{directed:e.isDirected(),multigraph:e.isMultigraph(),compound:e.isCompound()},nodes:d(e),edges:s(e)};return r().A(e.graph())||(n.value=i().A(e.graph())),n}function d(e){return a().A(e.nodes(),(function(n){var t=e.node(n),i=e.parent(n),a={v:n};return r().A(t)||(a.value=t),r().A(i)||(a.parent=i),a}))}function s(e){return a().A(e.edges(),(function(n){var t=e.edge(n),i={v:n.v,w:n.w};return r().A(n.name)||(i.name=n.name),r().A(t)||(i.value=t),i}))}}}]);