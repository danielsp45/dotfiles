"use strict";(globalThis.webpackChunknotion_next=globalThis.webpackChunknotion_next||[]).push([[59031],{459031:(e,n,t)=>{t.r(n),t.d(n,{AllMigrations:()=>a});const a={endSchema:{pragmas:{user_version:75},tables:{block:{info:{name:"block",sql:"CREATE TABLE block (\nid TEXT NOT NULL,\nspace_id TEXT NOT NULL,\nversion REAL NOT NULL,\nlast_version REAL,\ntype TEXT NOT NULL,\nproperties TEXT,\ncontent TEXT,\ndiscussions TEXT,\nview_ids TEXT,\ncollection_id TEXT,\npermissions TEXT,\ncreated_time REAL,\nlast_edited_time REAL,\ncopied_from TEXT,\nfile_ids TEXT,\nignore_block_count INTEGER,\nis_template INTEGER,\nparent_id TEXT,\nparent_table TEXT,\nalive INTEGER NOT NULL,\nmoved TEXT,\nformat TEXT,\ncreated_by TEXT,\nlast_edited_by TEXT,\ncreated_by_table TEXT,\ncreated_by_id TEXT,\nlast_edited_by_table TEXT,\nlast_edited_by_id TEXT,\ncontent_classification TEXT,\nmeta_user_id TEXT NOT NULL,\nmeta_last_access_timestamp REAL NOT NULL,\nmeta_role TEXT, moved_to_trash_table TEXT, moved_to_trash_id TEXT, moved_to_trash_time BIGINT, deleted_from_trash_time BIGINT, deleted_from_trash_table TEXT, deleted_from_trash_id TEXT, non_content_children TEXT, crdt_format_version INTEGER, crdt_data TEXT,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)",tbl_name:"block",type:"table"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"space_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:2,name:"version",type:"REAL",notnull:1,dflt_value:null,pk:0},{cid:3,name:"last_version",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:4,name:"type",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:5,name:"properties",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:6,name:"content",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:7,name:"discussions",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:8,name:"view_ids",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:9,name:"collection_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:10,name:"permissions",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:11,name:"created_time",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:12,name:"last_edited_time",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:13,name:"copied_from",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:14,name:"file_ids",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:15,name:"ignore_block_count",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:16,name:"is_template",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:17,name:"parent_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:18,name:"parent_table",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:19,name:"alive",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:20,name:"moved",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:21,name:"format",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:22,name:"created_by",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:23,name:"last_edited_by",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:24,name:"created_by_table",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:25,name:"created_by_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:26,name:"last_edited_by_table",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:27,name:"last_edited_by_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:28,name:"content_classification",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:29,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:30,name:"meta_last_access_timestamp",type:"REAL",notnull:1,dflt_value:null,pk:0},{cid:31,name:"meta_role",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:32,name:"moved_to_trash_table",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:33,name:"moved_to_trash_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:34,name:"moved_to_trash_time",type:"BIGINT",notnull:0,dflt_value:null,pk:0},{cid:35,name:"deleted_from_trash_time",type:"BIGINT",notnull:0,dflt_value:null,pk:0},{cid:36,name:"deleted_from_trash_table",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:37,name:"deleted_from_trash_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:38,name:"non_content_children",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:39,name:"crdt_format_version",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:40,name:"crdt_data",type:"TEXT",notnull:0,dflt_value:null,pk:0}]},collection:{info:{name:"collection",sql:"CREATE TABLE collection (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nlast_version REAL,\nname TEXT,\ndescription TEXT,\nicon TEXT,\ncover TEXT,\nschema TEXT,\nformat TEXT,\nparent_id TEXT NOT NULL,\nparent_table TEXT NOT NULL,\nalive INTEGER NOT NULL,\nfile_ids TEXT,\ntemplate_pages TEXT,\ncopied_from TEXT,\nmigrated INTEGER,\nspace_id TEXT NOT NULL,\ndeleted_schema TEXT,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT NOT NULL,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)",tbl_name:"collection",type:"table"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"version",type:"REAL",notnull:1,dflt_value:null,pk:0},{cid:2,name:"last_version",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:3,name:"name",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:4,name:"description",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:5,name:"icon",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:6,name:"cover",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:7,name:"schema",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:8,name:"format",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:9,name:"parent_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:10,name:"parent_table",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:11,name:"alive",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:12,name:"file_ids",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:13,name:"template_pages",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:14,name:"copied_from",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:15,name:"migrated",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:16,name:"space_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:17,name:"deleted_schema",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:18,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:19,name:"meta_role",type:"TEXT",notnull:1,dflt_value:null,pk:0}]},collection_view:{info:{name:"collection_view",sql:'CREATE TABLE "collection_view" (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nlast_version REAL,\ntype TEXT NOT NULL,\nname TEXT,\nicon TEXT,\npage_sort TEXT,\nparent_id TEXT NOT NULL,\nparent_table TEXT NOT NULL,\nalive INTEGER NOT NULL,\nformat TEXT,\nquery2 TEXT,\nspace_id TEXT NOT NULL,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT NOT NULL,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)',tbl_name:"collection_view",type:"table"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"version",type:"REAL",notnull:1,dflt_value:null,pk:0},{cid:2,name:"last_version",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:3,name:"type",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:4,name:"name",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:5,name:"icon",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:6,name:"page_sort",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:7,name:"parent_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:8,name:"parent_table",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:9,name:"alive",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:10,name:"format",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:11,name:"query2",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:12,name:"space_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:13,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:14,name:"meta_role",type:"TEXT",notnull:1,dflt_value:null,pk:0}]},comment:{info:{name:"comment",sql:"CREATE TABLE comment (\nid TEXT NOT NULL,\nversion INTEGER NOT NULL,\nlast_version INTEGER,\nparent_id TEXT NOT NULL,\nparent_table TEXT NOT NULL,\ntext TEXT,\ncreated_time REAL NOT NULL,\nlast_edited_time REAL,\nalive INTEGER NOT NULL,\ncreated_by_table TEXT,\ncreated_by_id TEXT,\nspace_id TEXT NOT NULL,\ncontent TEXT,\nreactions TEXT,\nmeta_user_id TEXT NOT NULL, /* which user is this record for */\nmeta_role TEXT NOT NULL, display_name TEXT, /* the role of the owning user for this record */\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)",tbl_name:"comment",type:"table"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"version",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:2,name:"last_version",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:3,name:"parent_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:4,name:"parent_table",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:5,name:"text",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:6,name:"created_time",type:"REAL",notnull:1,dflt_value:null,pk:0},{cid:7,name:"last_edited_time",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:8,name:"alive",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:9,name:"created_by_table",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:10,name:"created_by_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:11,name:"space_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:12,name:"content",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:13,name:"reactions",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:14,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:15,name:"meta_role",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:16,name:"display_name",type:"TEXT",notnull:0,dflt_value:null,pk:0}]},custom_emoji:{info:{name:"custom_emoji",sql:"CREATE TABLE custom_emoji (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nlast_version REAL,\nspace_id TEXT NOT NULL,\nname TEXT NOT NULL,\nurl TEXT NOT NULL,\nfile_ids TEXT,\ncreated_time REAL NOT NULL,\ncreated_by_id TEXT NOT NULL,\ncreated_by_table TEXT NOT NULL,\nalive INTEGER NOT NULL,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT NOT NULL,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)",tbl_name:"custom_emoji",type:"table"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"version",type:"REAL",notnull:1,dflt_value:null,pk:0},{cid:2,name:"last_version",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:3,name:"space_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:4,name:"name",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:5,name:"url",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:6,name:"file_ids",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:7,name:"created_time",type:"REAL",notnull:1,dflt_value:null,pk:0},{cid:8,name:"created_by_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:9,name:"created_by_table",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:10,name:"alive",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:11,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:12,name:"meta_role",type:"TEXT",notnull:1,dflt_value:null,pk:0}]},discussion:{info:{name:"discussion",sql:"CREATE TABLE discussion (\nid TEXT NOT NULL,\nversion INTEGER NOT NULL,\nlast_version INTEGER,\nparent_id TEXT NOT NULL,\nparent_table TEXT NOT NULL,\ncontext TEXT,\nresolved INTEGER NOT NULL,\ncomments TEXT,\nspace_id TEXT NOT NULL,\nmeta_user_id TEXT NOT NULL, /* which user is this record for */\nmeta_role TEXT NOT NULL, type TEXT, reactions TEXT, property_id text, /* the role of the owning user for this record */\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)",tbl_name:"discussion",type:"table"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"version",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:2,name:"last_version",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:3,name:"parent_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:4,name:"parent_table",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:5,name:"context",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:6,name:"resolved",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:7,name:"comments",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:8,name:"space_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:9,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:10,name:"meta_role",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:11,name:"type",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:12,name:"reactions",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:13,name:"property_id",type:"TEXT",notnull:0,dflt_value:null,pk:0}]},key_value_store:{info:{name:"key_value_store",sql:"CREATE TABLE key_value_store (id INTEGER PRIMARY KEY, key TEXT UNIQUE, value TEXT)",tbl_name:"key_value_store",type:"table"},columns:[{cid:0,name:"id",type:"INTEGER",notnull:0,dflt_value:null,pk:1},{cid:1,name:"key",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:2,name:"value",type:"TEXT",notnull:0,dflt_value:null,pk:0}]},notification:{info:{name:"notification",sql:"CREATE TABLE notification (\nid TEXT NOT NULL,\nversion INTEGER NOT NULL,\nlast_version INTEGER,\nuser_id TEXT NOT NULL,\nreceived INTEGER NOT NULL,\nread INTEGER NOT NULL,\nvisited INTEGER NOT NULL,\nemailed INTEGER NOT NULL,\ninvalid INTEGER NOT NULL,\nspace_id TEXT NOT NULL,\nnavigable_block_id TEXT,\ncollection_id TEXT,\ntype TEXT NOT NULL,\nend_time TEXT NOT NULL,\nchannel TEXT,\narchived_at INTEGER,\nmeta_user_id TEXT NOT NULL, /* which user is this record for */\nmeta_role TEXT NOT NULL, discussion_id TEXT, activity_id TEXT, parent_notification_id TEXT, child_notification_ids TEXT, /* the role of the owning user for this record */\n/* Records of all types tend to be accessed by (user_id, id) tuple\nand SQLite recommends against using common values as index prefixes */\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)",tbl_name:"notification",type:"table"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"version",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:2,name:"last_version",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:3,name:"user_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:4,name:"received",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:5,name:"read",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:6,name:"visited",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:7,name:"emailed",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:8,name:"invalid",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:9,name:"space_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:10,name:"navigable_block_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:11,name:"collection_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:12,name:"type",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:13,name:"end_time",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:14,name:"channel",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:15,name:"archived_at",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:16,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:17,name:"meta_role",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:18,name:"discussion_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:19,name:"activity_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:20,name:"parent_notification_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:21,name:"child_notification_ids",type:"TEXT",notnull:0,dflt_value:null,pk:0}]},notion:{info:{name:"notion",sql:"CREATE TABLE notion (id integer primary key, key unique, value)",tbl_name:"notion",type:"table"},columns:[{cid:0,name:"id",type:"INTEGER",notnull:0,dflt_value:null,pk:1},{cid:1,name:"key",type:"",notnull:0,dflt_value:null,pk:0},{cid:2,name:"value",type:"",notnull:0,dflt_value:null,pk:0}]},notion_user:{info:{name:"notion_user",sql:"CREATE TABLE notion_user (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nlast_version REAL,\nemail TEXT NOT NULL,\ngiven_name TEXT,\nfamily_name TEXT,\nname TEXT,\nprofile_photo TEXT,\nonboarding_completed INTEGER,\nmobile_onboarding_completed INTEGER,\nclipper_onboarding_completed INTEGER,\nreverify INTEGER,\nis_banned INTEGER,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT NOT NULL, suspended_time REAL,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)",tbl_name:"notion_user",type:"table"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"version",type:"REAL",notnull:1,dflt_value:null,pk:0},{cid:2,name:"last_version",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:3,name:"email",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:4,name:"given_name",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:5,name:"family_name",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:6,name:"name",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:7,name:"profile_photo",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:8,name:"onboarding_completed",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:9,name:"mobile_onboarding_completed",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:10,name:"clipper_onboarding_completed",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:11,name:"reverify",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:12,name:"is_banned",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:13,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:14,name:"meta_role",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:15,name:"suspended_time",type:"REAL",notnull:0,dflt_value:null,pk:0}]},offline_action:{info:{name:"offline_action",sql:"CREATE TABLE \"offline_action\" (\nid INTEGER PRIMARY KEY AUTOINCREMENT,\nmeta_user_id TEXT NOT NULL,\norigin_page_id TEXT NOT NULL,\nfrom_page_id TEXT NOT NULL,\nimpacted_page_id TEXT NOT NULL,\nautosync_type TEXT NOT NULL DEFAULT 'not_autosynced',\nUNIQUE (meta_user_id, origin_page_id, impacted_page_id, autosync_type),\nFOREIGN KEY (origin_page_id, meta_user_id) REFERENCES offline_page(id, meta_user_id),\nFOREIGN KEY (from_page_id, meta_user_id) REFERENCES offline_page(id, meta_user_id),\nFOREIGN KEY (impacted_page_id, meta_user_id) REFERENCES offline_page(id, meta_user_id)\n)",tbl_name:"offline_action",type:"table"},columns:[{cid:0,name:"id",type:"INTEGER",notnull:0,dflt_value:null,pk:1},{cid:1,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:2,name:"origin_page_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:3,name:"from_page_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:4,name:"impacted_page_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:5,name:"autosync_type",type:"TEXT",notnull:1,dflt_value:"'not_autosynced'",pk:0}]},offline_download_metadata:{info:{name:"offline_download_metadata",sql:"CREATE TABLE offline_download_metadata (\nmeta_user_id TEXT NOT NULL,\ntask_type TEXT NOT NULL,\nlast_executed_at INTEGER NOT NULL,\nCONSTRAINT primary_key PRIMARY KEY (meta_user_id, task_type)\n)",tbl_name:"offline_download_metadata",type:"table"},columns:[{cid:0,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"task_type",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:2,name:"last_executed_at",type:"INTEGER",notnull:1,dflt_value:null,pk:0}]},offline_page:{info:{name:"offline_page",sql:"CREATE TABLE offline_page (\nid TEXT NOT NULL,\nmeta_user_id TEXT NOT NULL, last_downloaded_at bigint, download_status TEXT, last_downloaded_version REAL, last_downloaded_record_change_timestamp INTEGER,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)",tbl_name:"offline_page",type:"table"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:2,name:"last_downloaded_at",type:"bigint",notnull:0,dflt_value:null,pk:0},{cid:3,name:"download_status",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:4,name:"last_downloaded_version",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:5,name:"last_downloaded_record_change_timestamp",type:"INTEGER",notnull:0,dflt_value:null,pk:0}]},reaction:{info:{name:"reaction",sql:"CREATE TABLE reaction (\nid TEXT NOT NULL,\nspace_id TEXT NOT NULL,\nversion INTEGER NOT NULL,\nlast_version INTEGER,\ncreated_time REAL,\nparent_table TEXT NOT NULL,\nparent_id TEXT NOT NULL,\nicon TEXT NOT NULL,\nactors TEXT,\nmeta_user_id TEXT NOT NULL, /* which user is this record for */\nmeta_role TEXT NOT NULL, /* the role of the owning user for this record */\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)",tbl_name:"reaction",type:"table"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"space_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:2,name:"version",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:3,name:"last_version",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:4,name:"created_time",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:5,name:"parent_table",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:6,name:"parent_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:7,name:"icon",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:8,name:"actors",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:9,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:10,name:"meta_role",type:"TEXT",notnull:1,dflt_value:null,pk:0}]},records:{info:{name:"records",sql:"CREATE TABLE records (\nrecord_table TEXT,\nrecord_id TEXT,\nrecord_value TEXT,\ntimestamp NUMERIC,\nparent_table TEXT,\nparent_id TEXT,\nimportance NUMERIC,\nuser_id TEXT, is_offline, space_id TEXT,\nCONSTRAINT primary_key PRIMARY KEY (record_table, record_id, user_id)\n)",tbl_name:"records",type:"table"},columns:[{cid:0,name:"record_table",type:"TEXT",notnull:0,dflt_value:null,pk:1},{cid:1,name:"record_id",type:"TEXT",notnull:0,dflt_value:null,pk:2},{cid:2,name:"record_value",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:3,name:"timestamp",type:"NUMERIC",notnull:0,dflt_value:null,pk:0},{cid:4,name:"parent_table",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:5,name:"parent_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:6,name:"importance",type:"NUMERIC",notnull:0,dflt_value:null,pk:0},{cid:7,name:"user_id",type:"TEXT",notnull:0,dflt_value:null,pk:3},{cid:8,name:"is_offline",type:"",notnull:0,dflt_value:null,pk:0},{cid:9,name:"space_id",type:"TEXT",notnull:0,dflt_value:null,pk:0}]},space:{info:{name:"space",sql:"CREATE TABLE space (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nlast_version REAL,\nname TEXT,\npermission_groups TEXT,\nemail_domains TEXT,\npages TEXT,\nicon TEXT,\ndisable_public_access INTEGER,\ndisable_public_access_requests INTEGER,\ndisable_guests INTEGER,\ndisable_move_to_space INTEGER,\ndisable_export INTEGER,\ndisable_space_page_edits INTEGER,\nbeta_enabled INTEGER,\ncreated_time REAL,\nlast_edited_time REAL,\ndeleted_by TEXT,\ncreated_by_table TEXT,\ncreated_by_id TEXT,\nlast_edited_by_table TEXT,\nlast_edited_by_id TEXT,\nadmin_disable_public_access INTEGER,\nspace_pages TEXT,\nplan_type TEXT,\ninvite_link_enabled INTEGER,\ninitial_use_cases TEXT,\npublic_home_page TEXT,\nbot_settings TEXT,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT, settings TEXT, subscription_tier TEXT, disable_team_creation BOOLEAN, overdue_subscription TEXT, short_id NUMBER, permanently_deleted_time NUMBER, short_id_str TEXT, referral_id TEXT DEFAULT NULL,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)",tbl_name:"space",type:"table"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"version",type:"REAL",notnull:1,dflt_value:null,pk:0},{cid:2,name:"last_version",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:3,name:"name",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:4,name:"permission_groups",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:5,name:"email_domains",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:6,name:"pages",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:7,name:"icon",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:8,name:"disable_public_access",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:9,name:"disable_public_access_requests",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:10,name:"disable_guests",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:11,name:"disable_move_to_space",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:12,name:"disable_export",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:13,name:"disable_space_page_edits",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:14,name:"beta_enabled",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:15,name:"created_time",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:16,name:"last_edited_time",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:17,name:"deleted_by",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:18,name:"created_by_table",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:19,name:"created_by_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:20,name:"last_edited_by_table",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:21,name:"last_edited_by_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:22,name:"admin_disable_public_access",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:23,name:"space_pages",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:24,name:"plan_type",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:25,name:"invite_link_enabled",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:26,name:"initial_use_cases",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:27,name:"public_home_page",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:28,name:"bot_settings",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:29,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:30,name:"meta_role",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:31,name:"settings",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:32,name:"subscription_tier",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:33,name:"disable_team_creation",type:"BOOLEAN",notnull:0,dflt_value:null,pk:0},{cid:34,name:"overdue_subscription",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:35,name:"short_id",type:"NUMBER",notnull:0,dflt_value:null,pk:0},{cid:36,name:"permanently_deleted_time",type:"NUMBER",notnull:0,dflt_value:null,pk:0},{cid:37,name:"short_id_str",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:38,name:"referral_id",type:"TEXT",notnull:0,dflt_value:"NULL",pk:0}]},space_permission_group:{info:{name:"space_permission_group",sql:"CREATE TABLE space_permission_group (\nid TEXT NOT NULL,\nversion INTEGER NOT NULL,\nspace_id TEXT NOT NULL,\ngroup_id TEXT NOT NULL,\nname TEXT NOT NULL,\nicon TEXT,\ncreated_by_id TEXT,\ncreated_by_table TEXT,\ncreated_at REAL,\nlast_edited_by_id TEXT,\nlast_edited_by_table TEXT,\nlast_edited_at REAL,\ndeleted_at REAL,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT NOT NULL, last_version INTEGER,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)",tbl_name:"space_permission_group",type:"table"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"version",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:2,name:"space_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:3,name:"group_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:4,name:"name",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:5,name:"icon",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:6,name:"created_by_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:7,name:"created_by_table",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:8,name:"created_at",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:9,name:"last_edited_by_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:10,name:"last_edited_by_table",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:11,name:"last_edited_at",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:12,name:"deleted_at",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:13,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:14,name:"meta_role",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:15,name:"last_version",type:"INTEGER",notnull:0,dflt_value:null,pk:0}]},space_permission_group_member:{info:{name:"space_permission_group_member",sql:"CREATE TABLE space_permission_group_member (\nid TEXT NOT NULL,\nversion INTEGER NOT NULL,\nspace_id TEXT NOT NULL,\nspace_permission_group_id TEXT NOT NULL,\nuser_id TEXT NOT NULL,\nremoved_at REAL,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT NOT NULL, last_version INTEGER,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)",tbl_name:"space_permission_group_member",type:"table"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"version",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:2,name:"space_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:3,name:"space_permission_group_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:4,name:"user_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:5,name:"removed_at",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:6,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:7,name:"meta_role",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:8,name:"last_version",type:"INTEGER",notnull:0,dflt_value:null,pk:0}]},space_user:{info:{name:"space_user",sql:"CREATE TABLE space_user (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nuser_id TEXT NOT NULL,\nspace_id TEXT NOT NULL,\ninvite_id TEXT,\nmembership_type TEXT NOT NULL,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT NOT NULL,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)",tbl_name:"space_user",type:"table"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"version",type:"REAL",notnull:1,dflt_value:null,pk:0},{cid:2,name:"user_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:3,name:"space_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:4,name:"invite_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:5,name:"membership_type",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:6,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:7,name:"meta_role",type:"TEXT",notnull:1,dflt_value:null,pk:0}]},space_view:{info:{name:"space_view",sql:"CREATE TABLE space_view (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nlast_version REAL,\nspace_id TEXT NOT NULL,\nbookmarked_pages TEXT,\nshared_pages TEXT,\nvisited_templates TEXT,\nsidebar_hidden_templates TEXT,\nnotify_mobile INTEGER NOT NULL,\nnotify_desktop INTEGER NOT NULL,\nnotify_email INTEGER NOT NULL,\nnotify_email_always INTEGER,\ncreated_getting_started INTEGER,\nparent_id TEXT NOT NULL,\nparent_table TEXT NOT NULL,\nalive INTEGER NOT NULL,\ncreated_onboarding_templates INTEGER,\nprivate_pages TEXT,\njoined INTEGER,\njoined_teams TEXT,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT, settings TEXT, ai_suggestions TEXT, sidebar_order TEXT, shared_pages_manual_sort TEXT, first_joined_space_time NUMBER, assistant_session_starters TEXT, public_share_link_pages TEXT,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)",tbl_name:"space_view",type:"table"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"version",type:"REAL",notnull:1,dflt_value:null,pk:0},{cid:2,name:"last_version",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:3,name:"space_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:4,name:"bookmarked_pages",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:5,name:"shared_pages",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:6,name:"visited_templates",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:7,name:"sidebar_hidden_templates",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:8,name:"notify_mobile",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:9,name:"notify_desktop",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:10,name:"notify_email",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:11,name:"notify_email_always",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:12,name:"created_getting_started",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:13,name:"parent_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:14,name:"parent_table",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:15,name:"alive",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:16,name:"created_onboarding_templates",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:17,name:"private_pages",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:18,name:"joined",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:19,name:"joined_teams",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:20,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:21,name:"meta_role",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:22,name:"settings",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:23,name:"ai_suggestions",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:24,name:"sidebar_order",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:25,name:"shared_pages_manual_sort",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:26,name:"first_joined_space_time",type:"NUMBER",notnull:0,dflt_value:null,pk:0},{cid:27,name:"assistant_session_starters",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:28,name:"public_share_link_pages",type:"TEXT",notnull:0,dflt_value:null,pk:0}]},sqlite_sequence:{info:{name:"sqlite_sequence",sql:"CREATE TABLE sqlite_sequence(name,seq)",tbl_name:"sqlite_sequence",type:"table"},columns:[{cid:0,name:"name",type:"",notnull:0,dflt_value:null,pk:0},{cid:1,name:"seq",type:"",notnull:0,dflt_value:null,pk:0}]},team:{info:{name:"team",sql:"CREATE TABLE team (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nlast_version REAL,\nspace_id TEXT NOT NULL,\nname TEXT NOT NULL,\ndescription TEXT,\nicon TEXT,\ncreated_time REAL NOT NULL,\ncreated_by_table TEXT NOT NULL,\ncreated_by_id TEXT NOT NULL,\nlast_edited_time REAL,\nlast_edited_by_table TEXT,\nlast_edited_by_id TEXT,\narchived_by TEXT,\nteam_pages TEXT,\nparent_id TEXT NOT NULL,\nparent_table TEXT NOT NULL,\nsettings TEXT,\nis_default INTEGER,\nmembership TEXT,\npermissions TEXT,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT, pinned_pages TEXT, archived_at REAL,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)",tbl_name:"team",type:"table"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"version",type:"REAL",notnull:1,dflt_value:null,pk:0},{cid:2,name:"last_version",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:3,name:"space_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:4,name:"name",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:5,name:"description",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:6,name:"icon",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:7,name:"created_time",type:"REAL",notnull:1,dflt_value:null,pk:0},{cid:8,name:"created_by_table",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:9,name:"created_by_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:10,name:"last_edited_time",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:11,name:"last_edited_by_table",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:12,name:"last_edited_by_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:13,name:"archived_by",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:14,name:"team_pages",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:15,name:"parent_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:16,name:"parent_table",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:17,name:"settings",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:18,name:"is_default",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:19,name:"membership",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:20,name:"permissions",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:21,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:22,name:"meta_role",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:23,name:"pinned_pages",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:24,name:"archived_at",type:"REAL",notnull:0,dflt_value:null,pk:0}]},thread:{info:{name:"thread",sql:"CREATE TABLE thread (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nlast_version REAL,\nmessages TEXT,\ndata TEXT,\nparent_id TEXT NOT NULL,\nparent_table TEXT NOT NULL,\nspace_id TEXT NOT NULL,\nalive INTEGER,\ncurrent_inference_id TEXT,\ncurrent_inference_lease_expiration REAL,\ncreated_time REAL NOT NULL,\ncreated_by_id TEXT NOT NULL,\ncreated_by_table TEXT NOT NULL,\nfile_ids TEXT,\ncreated_source TEXT,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT NOT NULL,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)",tbl_name:"thread",type:"table"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"version",type:"REAL",notnull:1,dflt_value:null,pk:0},{cid:2,name:"last_version",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:3,name:"messages",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:4,name:"data",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:5,name:"parent_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:6,name:"parent_table",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:7,name:"space_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:8,name:"alive",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:9,name:"current_inference_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:10,name:"current_inference_lease_expiration",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:11,name:"created_time",type:"REAL",notnull:1,dflt_value:null,pk:0},{cid:12,name:"created_by_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:13,name:"created_by_table",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:14,name:"file_ids",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:15,name:"created_source",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:16,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:17,name:"meta_role",type:"TEXT",notnull:1,dflt_value:null,pk:0}]},thread_message:{info:{name:"thread_message",sql:"CREATE TABLE thread_message (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nlast_version REAL,\nstep TEXT NOT NULL,\ndata TEXT,\nparent_id TEXT NOT NULL,\nparent_table TEXT NOT NULL,\nspace_id TEXT NOT NULL,\ncreated_time REAL NOT NULL,\ncreated_by_id TEXT NOT NULL,\ncreated_by_table TEXT NOT NULL,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT NOT NULL,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)",tbl_name:"thread_message",type:"table"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"version",type:"REAL",notnull:1,dflt_value:null,pk:0},{cid:2,name:"last_version",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:3,name:"step",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:4,name:"data",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:5,name:"parent_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:6,name:"parent_table",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:7,name:"space_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:8,name:"created_time",type:"REAL",notnull:1,dflt_value:null,pk:0},{cid:9,name:"created_by_id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:10,name:"created_by_table",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:11,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:12,name:"meta_role",type:"TEXT",notnull:1,dflt_value:null,pk:0}]},transactions:{info:{name:"transactions",sql:"CREATE TABLE transactions (\nid TEXT NOT NULL,\nuser_id TEXT,\nspace_id TEXT,\noperations TEXT NOT NULL,\ntimestamp REAL NOT NULL\n, debug TEXT, isUndoTransaction INTEGER, isTemplateInstantiationTransaction INTEGER)",tbl_name:"transactions",type:"table"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:1,name:"user_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:2,name:"space_id",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:3,name:"operations",type:"TEXT",notnull:1,dflt_value:null,pk:0},{cid:4,name:"timestamp",type:"REAL",notnull:1,dflt_value:null,pk:0},{cid:5,name:"debug",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:6,name:"isUndoTransaction",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:7,name:"isTemplateInstantiationTransaction",type:"INTEGER",notnull:0,dflt_value:null,pk:0}]},user_root:{info:{name:"user_root",sql:"CREATE TABLE user_root (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nspace_views TEXT,\nleft_spaces TEXT,\nspace_view_pointers TEXT,\ndeleted_email TEXT,\nlast_version REAL,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT NOT NULL,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)",tbl_name:"user_root",type:"table"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"version",type:"REAL",notnull:1,dflt_value:null,pk:0},{cid:2,name:"space_views",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:3,name:"left_spaces",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:4,name:"space_view_pointers",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:5,name:"deleted_email",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:6,name:"last_version",type:"REAL",notnull:0,dflt_value:null,pk:0},{cid:7,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:8,name:"meta_role",type:"TEXT",notnull:1,dflt_value:null,pk:0}]},user_settings:{info:{name:"user_settings",sql:"CREATE TABLE user_settings (\nid TEXT NOT NULL,\nversion INTEGER NOT NULL,\nlast_version INTEGER,\nsettings TEXT,\n/* We also add any number of meta_ columns, but these are required */\nmeta_user_id TEXT NOT NULL, /* which user is this record for */\nmeta_role TEXT NOT NULL, /* the role of the owning user for this record */\n/* Records of all types tend to be accessed by (user_id, id) tuple\nand SQLite recommends against using common values as index prefixes */\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)",tbl_name:"user_settings",type:"table"},columns:[{cid:0,name:"id",type:"TEXT",notnull:1,dflt_value:null,pk:1},{cid:1,name:"version",type:"INTEGER",notnull:1,dflt_value:null,pk:0},{cid:2,name:"last_version",type:"INTEGER",notnull:0,dflt_value:null,pk:0},{cid:3,name:"settings",type:"TEXT",notnull:0,dflt_value:null,pk:0},{cid:4,name:"meta_user_id",type:"TEXT",notnull:1,dflt_value:null,pk:2},{cid:5,name:"meta_role",type:"TEXT",notnull:1,dflt_value:null,pk:0}]}},indexes:{block_parent_id:{info:{name:"block_parent_id",sql:"CREATE INDEX block_parent_id ON block (parent_id, meta_user_id)",tbl_name:"block",type:"index"},columns:[{seqno:0,cid:17,name:"parent_id"},{seqno:1,cid:29,name:"meta_user_id"}]},idx_offline_action_from_page_id:{info:{name:"idx_offline_action_from_page_id",sql:"CREATE INDEX idx_offline_action_from_page_id ON offline_action (meta_user_id, from_page_id)",tbl_name:"offline_action",type:"index"},columns:[{seqno:0,cid:1,name:"meta_user_id"},{seqno:1,cid:3,name:"from_page_id"}]},idx_offline_action_impacted_page_id:{info:{name:"idx_offline_action_impacted_page_id",sql:"CREATE INDEX idx_offline_action_impacted_page_id ON offline_action (meta_user_id, impacted_page_id)",tbl_name:"offline_action",type:"index"},columns:[{seqno:0,cid:1,name:"meta_user_id"},{seqno:1,cid:4,name:"impacted_page_id"}]},idx_offline_action_origin_page_id:{info:{name:"idx_offline_action_origin_page_id",sql:"CREATE INDEX idx_offline_action_origin_page_id ON offline_action (meta_user_id, origin_page_id)",tbl_name:"offline_action",type:"index"},columns:[{seqno:0,cid:1,name:"meta_user_id"},{seqno:1,cid:2,name:"origin_page_id"}]},lru_deletion_order:{info:{name:"lru_deletion_order",sql:"CREATE INDEX lru_deletion_order ON block (meta_last_access_timestamp)",tbl_name:"block",type:"index"},columns:[{seqno:0,cid:30,name:"meta_last_access_timestamp"}]},offline_page_download_status_index:{info:{name:"offline_page_download_status_index",sql:"CREATE INDEX offline_page_download_status_index ON offline_page (download_status)",tbl_name:"offline_page",type:"index"},columns:[{seqno:0,cid:3,name:"download_status"}]},record_lru_deletion_order:{info:{name:"record_lru_deletion_order",sql:"CREATE INDEX record_lru_deletion_order ON records (is_offline, importance, timestamp)",tbl_name:"records",type:"index"},columns:[{seqno:0,cid:8,name:"is_offline"},{seqno:1,cid:6,name:"importance"},{seqno:2,cid:3,name:"timestamp"}]},record_parent:{info:{name:"record_parent",sql:"CREATE INDEX record_parent ON records (parent_id, user_id)",tbl_name:"records",type:"index"},columns:[{seqno:0,cid:5,name:"parent_id"},{seqno:1,cid:7,name:"user_id"}]},sqlite_autoindex_block_1:{info:{name:"sqlite_autoindex_block_1",sql:null,tbl_name:"block",type:"index"},columns:[{seqno:0,cid:0,name:"id"},{seqno:1,cid:29,name:"meta_user_id"}]},sqlite_autoindex_collection_1:{info:{name:"sqlite_autoindex_collection_1",sql:null,tbl_name:"collection",type:"index"},columns:[{seqno:0,cid:0,name:"id"},{seqno:1,cid:18,name:"meta_user_id"}]},sqlite_autoindex_collection_view_1:{info:{name:"sqlite_autoindex_collection_view_1",sql:null,tbl_name:"collection_view",type:"index"},columns:[{seqno:0,cid:0,name:"id"},{seqno:1,cid:13,name:"meta_user_id"}]},sqlite_autoindex_comment_1:{info:{name:"sqlite_autoindex_comment_1",sql:null,tbl_name:"comment",type:"index"},columns:[{seqno:0,cid:0,name:"id"},{seqno:1,cid:14,name:"meta_user_id"}]},sqlite_autoindex_custom_emoji_1:{info:{name:"sqlite_autoindex_custom_emoji_1",sql:null,tbl_name:"custom_emoji",type:"index"},columns:[{seqno:0,cid:0,name:"id"},{seqno:1,cid:11,name:"meta_user_id"}]},sqlite_autoindex_discussion_1:{info:{name:"sqlite_autoindex_discussion_1",sql:null,tbl_name:"discussion",type:"index"},columns:[{seqno:0,cid:0,name:"id"},{seqno:1,cid:9,name:"meta_user_id"}]},sqlite_autoindex_key_value_store_1:{info:{name:"sqlite_autoindex_key_value_store_1",sql:null,tbl_name:"key_value_store",type:"index"},columns:[{seqno:0,cid:1,name:"key"}]},sqlite_autoindex_notification_1:{info:{name:"sqlite_autoindex_notification_1",sql:null,tbl_name:"notification",type:"index"},columns:[{seqno:0,cid:0,name:"id"},{seqno:1,cid:16,name:"meta_user_id"}]},sqlite_autoindex_notion_1:{info:{name:"sqlite_autoindex_notion_1",sql:null,tbl_name:"notion",type:"index"},columns:[{seqno:0,cid:1,name:"key"}]},sqlite_autoindex_notion_user_1:{info:{name:"sqlite_autoindex_notion_user_1",sql:null,tbl_name:"notion_user",type:"index"},columns:[{seqno:0,cid:0,name:"id"},{seqno:1,cid:13,name:"meta_user_id"}]},sqlite_autoindex_offline_action_1:{info:{name:"sqlite_autoindex_offline_action_1",sql:null,tbl_name:"offline_action",type:"index"},columns:[{seqno:0,cid:1,name:"meta_user_id"},{seqno:1,cid:2,name:"origin_page_id"},{seqno:2,cid:4,name:"impacted_page_id"},{seqno:3,cid:5,name:"autosync_type"}]},sqlite_autoindex_offline_download_metadata_1:{info:{name:"sqlite_autoindex_offline_download_metadata_1",sql:null,tbl_name:"offline_download_metadata",type:"index"},columns:[{seqno:0,cid:0,name:"meta_user_id"},{seqno:1,cid:1,name:"task_type"}]},sqlite_autoindex_offline_page_1:{info:{name:"sqlite_autoindex_offline_page_1",sql:null,tbl_name:"offline_page",type:"index"},columns:[{seqno:0,cid:0,name:"id"},{seqno:1,cid:1,name:"meta_user_id"}]},sqlite_autoindex_reaction_1:{info:{name:"sqlite_autoindex_reaction_1",sql:null,tbl_name:"reaction",type:"index"},columns:[{seqno:0,cid:0,name:"id"},{seqno:1,cid:9,name:"meta_user_id"}]},sqlite_autoindex_records_1:{info:{name:"sqlite_autoindex_records_1",sql:null,tbl_name:"records",type:"index"},columns:[{seqno:0,cid:0,name:"record_table"},{seqno:1,cid:1,name:"record_id"},{seqno:2,cid:7,name:"user_id"}]},sqlite_autoindex_space_1:{info:{name:"sqlite_autoindex_space_1",sql:null,tbl_name:"space",type:"index"},columns:[{seqno:0,cid:0,name:"id"},{seqno:1,cid:29,name:"meta_user_id"}]},sqlite_autoindex_space_permission_group_1:{info:{name:"sqlite_autoindex_space_permission_group_1",sql:null,tbl_name:"space_permission_group",type:"index"},columns:[{seqno:0,cid:0,name:"id"},{seqno:1,cid:13,name:"meta_user_id"}]},sqlite_autoindex_space_permission_group_member_1:{info:{name:"sqlite_autoindex_space_permission_group_member_1",sql:null,tbl_name:"space_permission_group_member",type:"index"},columns:[{seqno:0,cid:0,name:"id"},{seqno:1,cid:6,name:"meta_user_id"}]},sqlite_autoindex_space_user_1:{info:{name:"sqlite_autoindex_space_user_1",sql:null,tbl_name:"space_user",type:"index"},columns:[{seqno:0,cid:0,name:"id"},{seqno:1,cid:6,name:"meta_user_id"}]},sqlite_autoindex_space_view_1:{info:{name:"sqlite_autoindex_space_view_1",sql:null,tbl_name:"space_view",type:"index"},columns:[{seqno:0,cid:0,name:"id"},{seqno:1,cid:20,name:"meta_user_id"}]},sqlite_autoindex_team_1:{info:{name:"sqlite_autoindex_team_1",sql:null,tbl_name:"team",type:"index"},columns:[{seqno:0,cid:0,name:"id"},{seqno:1,cid:21,name:"meta_user_id"}]},sqlite_autoindex_thread_1:{info:{name:"sqlite_autoindex_thread_1",sql:null,tbl_name:"thread",type:"index"},columns:[{seqno:0,cid:0,name:"id"},{seqno:1,cid:16,name:"meta_user_id"}]},sqlite_autoindex_thread_message_1:{info:{name:"sqlite_autoindex_thread_message_1",sql:null,tbl_name:"thread_message",type:"index"},columns:[{seqno:0,cid:0,name:"id"},{seqno:1,cid:11,name:"meta_user_id"}]},sqlite_autoindex_user_root_1:{info:{name:"sqlite_autoindex_user_root_1",sql:null,tbl_name:"user_root",type:"index"},columns:[{seqno:0,cid:0,name:"id"},{seqno:1,cid:7,name:"meta_user_id"}]},sqlite_autoindex_user_settings_1:{info:{name:"sqlite_autoindex_user_settings_1",sql:null,tbl_name:"user_settings",type:"index"},columns:[{seqno:0,cid:0,name:"id"},{seqno:1,cid:4,name:"meta_user_id"}]},transactions_user_id:{info:{name:"transactions_user_id",sql:"CREATE INDEX transactions_user_id ON transactions (user_id)",tbl_name:"transactions",type:"index"},columns:[{seqno:0,cid:1,name:"user_id"}]}}},migrations:[{id:1,description:"ensure-existing-schema",statements:[{sql:"create table if not exists notion (id integer primary key, key unique, value)"},{sql:"CREATE TABLE IF NOT EXISTS key_value_store (id INTEGER PRIMARY KEY, key TEXT UNIQUE, value TEXT)"}]},{id:2,description:"indexed-record-cache-and-transactions",statements:[{sql:"CREATE TABLE IF NOT EXISTS transactions (\n\tid TEXT PRIMARY KEY,\n\tvalue TEXT\n)"},{sql:"CREATE TABLE IF NOT EXISTS records (\n\trecord_table TEXT,\n\trecord_id TEXT,\n\trecord_value TEXT,\n\ttimestamp NUMERIC,\n\tparent_table TEXT,\n\tparent_id TEXT,\n\tCONSTRAINT primary_key PRIMARY KEY (record_table, record_id)\n)"},{sql:"CREATE INDEX record_lru_timestamp ON records (timestamp)"},{sql:"CREATE INDEX record_parent ON records (record_table, parent_table, parent_id)"},{sql:"INSERT INTO transactions (id, value)\nSELECT substr(key, 24), json_extract(value, '$.value') FROM notion\nWHERE key LIKE 'LocalTransactionStore3:%'"}]},{id:3,description:"record-cache-importance",statements:[{sql:"ALTER TABLE records ADD COLUMN importance NUMERIC"},{sql:"DROP INDEX record_lru_timestamp"},{sql:"CREATE INDEX record_lru_important_timestamp ON records (importance, timestamp)"}]},{id:4,description:"add-user-id-column-to-records",statements:[{sql:"DROP INDEX record_parent"},{sql:"DROP INDEX record_lru_important_timestamp"},{sql:"ALTER TABLE records RENAME TO previous_records"},{sql:"CREATE TABLE IF NOT EXISTS records (\n\trecord_table TEXT,\n\trecord_id TEXT,\n\trecord_value TEXT,\n\ttimestamp NUMERIC,\n\tparent_table TEXT,\n\tparent_id TEXT,\n\timportance NUMERIC,\n\tuser_id TEXT,\n\tCONSTRAINT primary_key PRIMARY KEY (record_table, record_id, user_id)\n)"},{sql:"INSERT INTO records (record_table, record_id, record_value, timestamp, parent_table, parent_id, importance)\nSELECT record_table, record_id, record_value, timestamp, parent_table, parent_id, importance FROM previous_records"},{sql:"DROP TABLE previous_records"},{sql:"CREATE INDEX record_parent ON records (record_table, parent_table, parent_id, user_id)"},{sql:"CREATE INDEX record_lru_important_timestamp ON records (importance, timestamp)"},{sql:"CREATE INDEX record_user_id ON records (user_id)"}]},{id:5,description:"add-new-column-and-index-for-userid-to-transactions-table",statements:[{sql:"ALTER TABLE transactions ADD COLUMN user_id TEXT"},{sql:"CREATE INDEX transactions_user_id ON transactions (user_id)"}]},{id:6,description:"add-offline-tables",statements:[{sql:"CREATE TABLE IF NOT EXISTS offline_root (\n    user_id TEXT NOT NULL,\n    record_table TEXT NOT NULL,\n    record_id TEXT NOT NULL,\n    CONSTRAINT primary_key PRIMARY KEY (record_table, record_id, user_id)\n)"},{sql:"CREATE TABLE IF NOT EXISTS offline_sync_parent (\n    user_id TEXT NOT NULL,\n    root_table TEXT NOT NULL,\n    root_id TEXT NOT NULL,\n    sync_parent_table TEXT NOT NULL,\n    sync_parent_id TEXT NOT NULL,\n    state TEXT NOT NULL,\n    last_updated_local_timestamp INTEGER NOT NULL,\n    last_synced_global_cursor TEXT,\n    CONSTRAINT primary_key PRIMARY KEY (sync_parent_table, sync_parent_id, user_id)\n)"},{sql:"CREATE INDEX offline_sync_parent_root ON offline_sync_parent (user_id, root_table, root_id)"}]},{id:7,description:"add-offline-root-record-junction-table",statements:[{sql:"CREATE TABLE IF NOT EXISTS offline_record_pointer (\n    user_id TEXT NOT NULL,\n    root_table TEXT NOT NULL,\n    root_id TEXT NOT NULL,\n    sync_parent_table TEXT NOT NULL,\n    sync_parent_id TEXT NOT NULL,\n    record_table TEXT NOT NULL,\n    record_id TEXT NOT NULL,\n    is_full_sync_in_progress NUMERIC NOT NULL,\n    CONSTRAINT primary_key PRIMARY KEY (user_id, root_id, sync_parent_id, record_id)\n)"},{sql:"CREATE INDEX record_id_idx ON offline_record_pointer (record_id)"},{sql:"CREATE INDEX root_id_idx ON offline_record_pointer (root_id)"},{sql:"CREATE INDEX sync_parent_id_idx ON offline_record_pointer (sync_parent_id, is_full_sync_in_progress)"}]},{id:8,description:"add-offline-flag-to-records",statements:[{sql:"ALTER TABLE records ADD COLUMN is_offline"},{sql:"DROP INDEX record_lru_important_timestamp"},{sql:"CREATE INDEX record_lru_deletion_order ON records (is_offline, importance, timestamp)"}]},{id:9,description:"add-space-id-column-to-records",statements:[{sql:"ALTER TABLE records ADD COLUMN space_id TEXT"}]},{id:10,description:"restructure-record-parent-index",statements:[{sql:"DROP INDEX IF EXISTS record_parent"},{sql:"DROP INDEX IF EXISTS record_user_id"},{sql:"CREATE INDEX record_user_parent_id ON records (user_id, parent_id, parent_table, record_table)"}]},{id:11,description:"undo-record-parent-index-restructure",statements:[{sql:"DROP INDEX IF EXISTS record_user_parent_id"},{sql:"CREATE INDEX IF NOT EXISTS record_parent ON records (parent_id, user_id)"}]},{id:12,description:"remove-offline-tables",statements:[{sql:"DROP TABLE IF EXISTS offline_record_pointer"},{sql:"DROP TABLE IF EXISTS offline_sync_parent"}]},{id:13,description:"create-block-table",statements:[{sql:"CREATE TABLE IF NOT EXISTS block (\n\tid TEXT NOT NULL,\n\tspace_id TEXT NOT NULL,\n\tversion REAL NOT NULL,\n\tlast_version REAL,\n\ttype TEXT NOT NULL,\n\tproperties TEXT,\n\tcontent TEXT,\n\tdiscussions TEXT,\n\tview_ids TEXT,\n\tcollection_id TEXT,\n\tpermissions TEXT,\n\tcreated_time REAL,\n\tlast_edited_time REAL,\n\tcopied_from TEXT,\n\tfile_ids TEXT,\n\tignore_block_count INTEGER,\n\tis_template INTEGER,\n\tparent_id TEXT,\n\tparent_table TEXT,\n\talive INTEGER NOT NULL,\n\tmoved TEXT,\n\tformat TEXT,\n\tcreated_by TEXT,\n\tlast_edited_by TEXT,\n\tcreated_by_table TEXT,\n\tcreated_by_id TEXT,\n\tlast_edited_by_table TEXT,\n\tlast_edited_by_id TEXT,\n\tcontent_classification TEXT,\n\tmeta_user_id TEXT NOT NULL,\n\tmeta_last_access_timestamp REAL NOT NULL,\n\tmeta_role TEXT,\n\tCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"CREATE INDEX block_parent_id ON block (parent_id, meta_user_id)"},{sql:"CREATE INDEX lru_deletion_order ON block (meta_last_access_timestamp)"}]},{id:14,description:"copy-blocks-to-block-table",statements:[{sql:"INSERT OR IGNORE INTO block\nSELECT\n\tjson_extract(record_value, '$.value.id') as id,\n\tjson_extract(record_value, '$.value.space_id') as space_id,\n\tjson_extract(record_value, '$.value.version') as version,\n\tjson_extract(record_value, '$.value.last_version') as last_version,\n\tjson_extract(record_value, '$.value.type') as type,\n\tjson_extract(record_value, '$.value.properties') as properties,\n\tjson_extract(record_value, '$.value.content') as content,\n\tjson_extract(record_value, '$.value.discussions') as discussions,\n\tjson_extract(record_value, '$.value.view_ids') as view_ids,\n\tjson_extract(record_value, '$.value.collection_id') as collection_id,\n\tjson_extract(record_value, '$.value.permissions') as permissions,\n\tjson_extract(record_value, '$.value.created_time') as created_time,\n\tjson_extract(record_value, '$.value.last_edited_time') as last_edited_time,\n\tjson_extract(record_value, '$.value.copied_from') as copied_from,\n\tjson_extract(record_value, '$.value.file_ids') as file_ids,\n\tjson_extract(record_value, '$.value.ignore_block_count') as ignore_block_count,\n\tjson_extract(record_value, '$.value.is_template') as is_template,\n\tjson_extract(record_value, '$.value.parent_id') as parent_id,\n\tjson_extract(record_value, '$.value.parent_table') as parent_table,\n\tjson_extract(record_value, '$.value.alive') as alive,\n\tjson_extract(record_value, '$.value.moved') as moved,\n\tjson_extract(record_value, '$.value.format') as format,\n\tjson_extract(record_value, '$.value.created_by') as created_by,\n\tjson_extract(record_value, '$.value.last_edited_by') as last_edited_by,\n\tjson_extract(record_value, '$.value.created_by_table') as created_by_table,\n\tjson_extract(record_value, '$.value.created_by_id') as created_by_id,\n\tjson_extract(record_value, '$.value.last_edited_by_table') as last_edited_by_table,\n\tjson_extract(record_value, '$.value.last_edited_by_id') as last_edited_by_id,\n\tjson_extract(record_value, '$.value.content_classification') as content_classification,\n\tuser_id as meta_user_id,\n\ttimestamp as meta_last_access_timestamp,\n\tjson_extract(record_value, '$.role') as meta_role\nFROM records\nWHERE record_table = 'block'\nLIMIT 5000"}]},{id:15,description:"create-space-table",statements:[{sql:"CREATE TABLE IF NOT EXISTS space (\n\t\tid TEXT NOT NULL,\n\t\tversion REAL NOT NULL,\n\t\tlast_version REAL,\n\t\tname TEXT,\n\t\tpermissions TEXT,\n\t\tpermission_groups TEXT,\n\t\temail_domains TEXT,\n\t\tpages TEXT,\n\t\ticon TEXT,\n\t\tdisable_public_access INTEGER,\n\t\tdisable_public_access_requests INTEGER,\n\t\tdisable_guests INTEGER,\n\t\tdisable_move_to_space INTEGER,\n\t\tdisable_export INTEGER,\n\t\tdisable_space_page_edits INTEGER,\n\t\tbeta_enabled INTEGER,\n\t\tcreated_time REAL,\n\t\tlast_edited_time REAL,\n\t\tdeleted_by TEXT,\n\t\tcreated_by_table TEXT,\n\t\tcreated_by_id TEXT,\n\t\tlast_edited_by_table TEXT,\n\t\tlast_edited_by_id TEXT,\n\t\tadmin_disable_public_access INTEGER,\n\t\tspace_pages TEXT,\n\t\tplan_type TEXT,\n\t\tinvite_link_enabled INTEGER,\n\t\tinitial_use_cases TEXT,\n\t\tpublic_home_page TEXT,\n\t\tbot_settings TEXT,\n\t\tmeta_user_id TEXT NOT NULL,\n\t\tmeta_role TEXT,\n\t\tCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"INSERT OR IGNORE INTO space\nSELECT\n\tjson_extract(record_value, '$.value.id') as id,\n\tjson_extract(record_value, '$.value.version') as version,\n\tjson_extract(record_value, '$.value.last_version') as last_version,\n\tjson_extract(record_value, '$.value.name') as name,\n\tjson_extract(record_value, '$.value.permissions') as permissions,\n\tjson_extract(record_value, '$.value.permission_groups') as permission_groups,\n\tjson_extract(record_value, '$.value.email_domains') as email_domains,\n\tjson_extract(record_value, '$.value.pages') as pages,\n\tjson_extract(record_value, '$.value.icon') as icon,\n\tjson_extract(record_value, '$.value.disable_public_access') as disable_public_access,\n\tjson_extract(record_value, '$.value.disable_public_access_requests') as disable_public_access_requests,\n\tjson_extract(record_value, '$.value.disable_guests') as disable_guests,\n\tjson_extract(record_value, '$.value.disable_move_to_space') as disable_move_to_space,\n\tjson_extract(record_value, '$.value.disable_export') as disable_export,\n\tjson_extract(record_value, '$.value.disable_space_page_edits') as disable_space_page_edits,\n\tjson_extract(record_value, '$.value.beta_enabled') as beta_enabled,\n\tjson_extract(record_value, '$.value.created_time') as created_time,\n\tjson_extract(record_value, '$.value.last_edited_time') as last_edited_time,\n\tjson_extract(record_value, '$.value.deleted_by') as deleted_by,\n\tjson_extract(record_value, '$.value.created_by_table') as created_by_table,\n\tjson_extract(record_value, '$.value.created_by_id') as created_by_id,\n\tjson_extract(record_value, '$.value.last_edited_by_table') as last_edited_by_table,\n\tjson_extract(record_value, '$.value.last_edited_by_id') as last_edited_by_id,\n\tjson_extract(record_value, '$.value.admin_disable_public_access') as admin_disable_public_access,\n\tjson_extract(record_value, '$.value.space_pages') as space_pages,\n\tjson_extract(record_value, '$.value.plan_type') as plan_type,\n\tjson_extract(record_value, '$.value.invite_link_enabled') as invite_link_enabled,\n\tjson_extract(record_value, '$.value.initial_use_cases') as initial_use_cases,\n\tjson_extract(record_value, '$.value.public_home_page') as public_home_page,\n\tjson_extract(record_value, '$.value.bot_settings') as bot_settings,\n\tuser_id as meta_user_id,\n\tjson_extract(record_value, '$.role') as meta_role\nFROM records\nWHERE record_table = 'space'"},{sql:"CREATE TABLE IF NOT EXISTS space_view (\n\tid TEXT NOT NULL,\n\tversion REAL NOT NULL,\n\tlast_version REAL,\n\tspace_id TEXT NOT NULL,\n\tbookmarked_pages TEXT,\n\tshared_pages TEXT,\n\tvisited_templates TEXT,\n\tsidebar_hidden_templates TEXT,\n\tnotify_mobile INTEGER NOT NULL,\n\tnotify_desktop INTEGER NOT NULL,\n\tnotify_email INTEGER NOT NULL,\n\tnotify_email_always INTEGER,\n\tcreated_getting_started INTEGER,\n\tparent_id TEXT NOT NULL,\n\tparent_table TEXT NOT NULL,\n\talive INTEGER NOT NULL,\n\tcreated_onboarding_templates INTEGER,\n\tprivate_pages TEXT,\n\tjoined INTEGER,\n\tjoined_teams TEXT,\n\tmeta_user_id TEXT NOT NULL,\n\tmeta_role TEXT,\n\tCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"INSERT OR IGNORE INTO space_view\nSELECT\n\tjson_extract(record_value, '$.value.id') as id,\n\tjson_extract(record_value, '$.value.version') as version,\n\tjson_extract(record_value, '$.value.last_version') as last_version,\n\tjson_extract(record_value, '$.value.space_id') as space_id,\n\tjson_extract(record_value, '$.value.bookmarked_pages') as bookmarked_pages,\n\tjson_extract(record_value, '$.value.shared_pages') as shared_pages,\n\tjson_extract(record_value, '$.value.visited_templates') as visited_templates,\n\tjson_extract(record_value, '$.value.sidebar_hidden_templates') as sidebar_hidden_templates,\n\tjson_extract(record_value, '$.value.notify_mobile') as notify_mobile,\n\tjson_extract(record_value, '$.value.notify_desktop') as notify_desktop,\n\tjson_extract(record_value, '$.value.notify_email') as notify_email,\n\tjson_extract(record_value, '$.value.notify_email_always') as notify_email_always,\n\tjson_extract(record_value, '$.value.created_getting_started') as created_getting_started,\n\tjson_extract(record_value, '$.value.parent_id') as parent_id,\n\tjson_extract(record_value, '$.value.parent_table') as parent_table,\n\tjson_extract(record_value, '$.value.alive') as alive,\n\tjson_extract(record_value, '$.value.created_onboarding_templates') as created_onboarding_templates,\n\tjson_extract(record_value, '$.value.private_pages') as private_pages,\n\tjson_extract(record_value, '$.value.joined') as joined,\n\tjson_extract(record_value, '$.value.joined_teams') as joined_teams,\n\tuser_id as meta_user_id,\n\tjson_extract(record_value, '$.role') as meta_role\nFROM records\nWHERE record_table = 'space_view'"}]},{id:16,description:"improve-transaction-schema",statements:[{sql:"ALTER TABLE transactions RENAME TO legacy_transactions"},{sql:"DROP INDEX IF EXISTS transactions_user_id"},{sql:"CREATE TABLE IF NOT EXISTS transactions (\n    id TEXT NOT NULL,\n    user_id TEXT,\n    space_id TEXT,\n    operations TEXT NOT NULL,\n    timestamp REAL NOT NULL\n)"},{sql:"CREATE INDEX transactions_user_id ON transactions (user_id)"},{sql:"INSERT OR IGNORE INTO transactions\nSELECT\n    id,\n    user_id,\n    json_extract(value, '$.spaceId') as space_id,\n    json_extract(value, '$.operations') as operations,\n    json_extract(value, '$.timestamp') as timestamp\nFROM legacy_transactions"}]},{id:17,description:"drop-legacy-tables",statements:[{sql:"DROP TABLE IF EXISTS legacy_transactions"},{sql:"DROP TABLE IF EXISTS offline_root"}]},{id:18,description:"create-user-root-table",statements:[{sql:"CREATE TABLE IF NOT EXISTS user_root (\n        id TEXT NOT NULL,\n        version REAL NOT NULL,\n        space_views TEXT,\n        left_spaces TEXT,\n        space_view_pointers TEXT,\n        deleted_email TEXT,\n        last_version REAL,\n        meta_user_id TEXT NOT NULL,\n        meta_role TEXT NOT NULL,\n        CONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"INSERT OR IGNORE INTO user_root\nSELECT\n    json_extract(record_value, '$.value.id') as id,\n    json_extract(record_value, '$.value.version') as version,\n    json_extract(record_value, '$.value.space_views') as space_views,\n    json_extract(record_value, '$.value.left_spaces') as left_spaces,\n    json_extract(record_value, '$.value.space_view_pointers') as space_view_pointers,\n    json_extract(record_value, '$.value.deleted_email') as deleted_email,\n    json_extract(record_value, '$.value.last_version') as last_version,\n    user_id as meta_user_id,\n    json_extract(record_value, '$.role') as meta_role\nFROM records\nWHERE record_table = 'user_root'"},{sql:"CREATE TABLE IF NOT EXISTS notion_user (\n        id TEXT NOT NULL,\n        version REAL NOT NULL,\n        last_version REAL,\n        email TEXT NOT NULL,\n        given_name TEXT,\n        family_name TEXT,\n        name TEXT,\n        profile_photo TEXT,\n        onboarding_completed INTEGER,\n        mobile_onboarding_completed INTEGER,\n        clipper_onboarding_completed INTEGER,\n        reverify INTEGER,\n        is_banned INTEGER,\n        meta_user_id TEXT NOT NULL,\n        meta_role TEXT NOT NULL,\n        CONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"INSERT OR IGNORE INTO notion_user\nSELECT\n    json_extract(record_value, '$.value.id') as id,\n    json_extract(record_value, '$.value.version') as version,\n    json_extract(record_value, '$.value.last_version') as last_version,\n    json_extract(record_value, '$.value.email') as email,\n    json_extract(record_value, '$.value.given_name') as given_name,\n    json_extract(record_value, '$.value.family_name') as family_name,\n    json_extract(record_value, '$.value.name') as name,\n    json_extract(record_value, '$.value.profile_photo') as profile_photo,\n    json_extract(record_value, '$.value.onboarding_completed') as onboarding_completed,\n    json_extract(record_value, '$.value.mobile_onboarding_completed') as mobile_onboarding_completed,\n    json_extract(record_value, '$.value.clipper_onboarding_completed') as clipper_onboarding_completed,\n    json_extract(record_value, '$.value.reverify') as reverify,\n    json_extract(record_value, '$.value.is_banned') as is_banned,\n    user_id as meta_user_id,\n    json_extract(record_value, '$.role') as meta_role\nFROM records\nWHERE record_table = 'notion_user'"}]},{id:19,description:"create-collection-view-table",statements:[{sql:"CREATE TABLE IF NOT EXISTS collection_view (\n\tid TEXT NOT NULL,\n\tversion INTEGER NOT NULL,\n\tlast_version INTEGER,\n\ttype TEXT NOT NULL,\n\tname TEXT,\n\ticon TEXT,\n\tpage_sort TEXT,\n\tparent_id TEXT NOT NULL,\n\tparent_table TEXT NOT NULL,\n\talive INTEGER NOT NULL,\n\tformat TEXT,\n\tquery2 TEXT,\n\tspace_id TEXT NOT NULL,\n\tmeta_user_id TEXT NOT NULL,\n\tmeta_role TEXT NOT NULL,\n\tCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"INSERT OR IGNORE INTO collection_view\nSELECT\n\tjson_extract(record_value, '$.value.id') as id,\n\tjson_extract(record_value, '$.value.version') as version,\n\tjson_extract(record_value, '$.value.last_version') as last_version,\n\tjson_extract(record_value, '$.value.type') as type,\n\tjson_extract(record_value, '$.value.name') as name,\n\tjson_extract(record_value, '$.value.icon') as icon,\n\tjson_extract(record_value, '$.value.page_sort') as page_sort,\n\tjson_extract(record_value, '$.value.parent_id') as parent_id,\n\tjson_extract(record_value, '$.value.parent_table') as parent_table,\n\tjson_extract(record_value, '$.value.alive') as alive,\n\tjson_extract(record_value, '$.value.format') as format,\n\tjson_extract(record_value, '$.value.query2') as query2,\n\tjson_extract(record_value, '$.value.space_id') as space_id,\n\tuser_id as meta_user_id,\n\tjson_extract(record_value, '$.role') as meta_role\nFROM records\nWHERE record_table = 'collection_view'"},{sql:"DELETE FROM records WHERE record_table = 'collection_view'"}]},{id:20,description:"migrate-collection-tables",statements:[{sql:"CREATE TABLE IF NOT EXISTS new_collection_view (\n    id TEXT NOT NULL,\n    version REAL NOT NULL,\n    last_version REAL,\n    type TEXT NOT NULL,\n    name TEXT,\n    icon TEXT,\n    page_sort TEXT,\n    parent_id TEXT NOT NULL,\n    parent_table TEXT NOT NULL,\n    alive INTEGER NOT NULL,\n    format TEXT,\n    query2 TEXT,\n    space_id TEXT NOT NULL,\n    meta_user_id TEXT NOT NULL,\n    meta_role TEXT NOT NULL,\n    CONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"INSERT OR IGNORE INTO new_collection_view\nSELECT\n    *\nFROM collection_view"},{sql:"DROP TABLE collection_view"},{sql:"ALTER TABLE new_collection_view RENAME TO collection_view"},{sql:"CREATE TABLE IF NOT EXISTS collection (\n    id TEXT NOT NULL,\n    version REAL NOT NULL,\n    last_version REAL,\n    name TEXT,\n    description TEXT,\n    icon TEXT,\n    cover TEXT,\n    schema TEXT,\n    format TEXT,\n    parent_id TEXT NOT NULL,\n    parent_table TEXT NOT NULL,\n    alive INTEGER NOT NULL,\n    file_ids TEXT,\n    template_pages TEXT,\n    copied_from TEXT,\n    migrated INTEGER,\n    space_id TEXT NOT NULL,\n    deleted_schema TEXT,\n    meta_user_id TEXT NOT NULL,\n    meta_role TEXT NOT NULL,\n    CONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"INSERT OR IGNORE INTO collection\nSELECT\n    json_extract(record_value, '$.value.id') as id,\n    json_extract(record_value, '$.value.version') as version,\n    json_extract(record_value, '$.value.last_version') as last_version,\n    json_extract(record_value, '$.value.name') as name,\n    json_extract(record_value, '$.value.description') as description,\n    json_extract(record_value, '$.value.icon') as icon,\n    json_extract(record_value, '$.value.cover') as cover,\n    json_extract(record_value, '$.value.schema') as schema,\n    json_extract(record_value, '$.value.format') as format,\n    json_extract(record_value, '$.value.parent_id') as parent_id,\n    json_extract(record_value, '$.value.parent_table') as parent_table,\n    json_extract(record_value, '$.value.alive') as alive,\n    json_extract(record_value, '$.value.file_ids') as file_ids,\n    json_extract(record_value, '$.value.template_pages') as template_pages,\n    json_extract(record_value, '$.value.copied_from') as copied_from,\n    json_extract(record_value, '$.value.migrated') as migrated,\n    json_extract(record_value, '$.value.space_id') as space_id,\n    json_extract(record_value, '$.value.deleted_schema') as deleted_schema,\n    user_id as meta_user_id,\n    json_extract(record_value, '$.role') as meta_role\nFROM records\nWHERE record_table = 'collection'"},{sql:"DELETE FROM records WHERE record_table = 'collection'"}]},{id:21,description:"create-teams-table",statements:[{sql:"CREATE TABLE IF NOT EXISTS team (\n \t\tid TEXT NOT NULL,\n \t\tversion REAL NOT NULL,\n \t\tlast_version REAL,\n\t\tspace_id TEXT NOT NULL,\n \t\tname TEXT NOT NULL,\n\t\tdescription TEXT,\n\t\ticon TEXT,\n\t\tcreated_time REAL NOT NULL,\n\t\tcreated_by_table TEXT NOT NULL,\n\t\tcreated_by_id TEXT NOT NULL,\n\t\tlast_edited_time REAL,\n\t\tlast_edited_by_table TEXT,\n \t\tlast_edited_by_id TEXT,\n\t\tarchived_by TEXT,\n\t\tteam_pages TEXT,\n\t\tparent_id TEXT NOT NULL,\n\t\tparent_table TEXT NOT NULL,\n\t\tsettings TEXT,\n\t\tis_default INTEGER,\n\t\tmembership TEXT,\n \t\tpermissions TEXT,\n \t\tmeta_user_id TEXT NOT NULL,\n \t\tmeta_role TEXT,\n \t\tCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n )"},{sql:" INSERT OR IGNORE INTO team\n SELECT\n \tjson_extract(record_value, '$.value.id') as id,\n\tjson_extract(record_value, '$.value.version') as version,\n\tjson_extract(record_value, '$.value.last_version') as last_version,\n\tjson_extract(record_value, '$.value.space_id') as space_id,\n\tjson_extract(record_value, '$.value.name') as name,\n\tjson_extract(record_value, '$.value.description') as description,\n\tjson_extract(record_value, '$.value.icon') as icon,\n\tjson_extract(record_value, '$.value.created_time') as created_time,\n\tjson_extract(record_value, '$.value.created_by_table') as created_by_table,\n\tjson_extract(record_value, '$.value.created_by_id') as created_by_id,\n\tjson_extract(record_value, '$.value.last_edited_time') as last_edited_time,\n\tjson_extract(record_value, '$.value.last_edited_by_table') as last_edited_by_table,\n\tjson_extract(record_value, '$.value.last_edited_by_id') as last_edited_by_id,\n\tjson_extract(record_value, '$.value.archived_by') as archived_by,\n\tjson_extract(record_value, '$.value.team_pages') as team_pages,\n\tjson_extract(record_value, '$.value.parent_id') as parent_id,\n\tjson_extract(record_value, '$.value.parent_table') as parent_table,\n\tjson_extract(record_value, '$.value.settings') as settings,\n\tjson_extract(record_value, '$.value.is_default') as is_default,\n\tjson_extract(record_value, '$.value.membership') as membership,\n\tjson_extract(record_value, '$.value.permissions') as permissions,\n\tuser_id as meta_user_id,\n\tjson_extract(record_value, '$.role') as meta_role\n FROM records\n WHERE record_table = 'team'"}]},{id:22,description:"add-settings-to-space-view",statements:[{sql:"ALTER TABLE space_view ADD COLUMN settings TEXT"}]},{id:23,description:"team-pinned-pages",statements:[{sql:"ALTER TABLE team ADD COLUMN pinned_pages TEXT"}]},{id:24,description:"add-tx-debug-column",statements:[{sql:"ALTER TABLE transactions ADD COLUMN debug TEXT"}]},{id:25,description:"add-space-settings-column",statements:[{sql:"ALTER TABLE space ADD COLUMN settings TEXT"}]},{id:26,description:"add-subscription-tier-and-disable-team-creation-columns-to-space",statements:[{sql:"ALTER TABLE space ADD COLUMN subscription_tier TEXT"},{sql:"ALTER TABLE space ADD COLUMN disable_team_creation BOOLEAN"}]},{id:27,description:"add-archived-at-to-team",statements:[{sql:"ALTER TABLE team ADD COLUMN archived_at REAL"}]},{id:28,description:"no-op-browser-version-bump",statements:[]},{id:29,description:"space-overdue-subscription",statements:[{sql:"ALTER TABLE space ADD COLUMN overdue_subscription TEXT"}]},{id:30,description:"add-suspended-time-to-user",statements:[{sql:"ALTER TABLE notion_user ADD COLUMN suspended_time REAL"}]},{id:31,description:"extract-user-settings-table",statements:[{sql:"/* We only use three of SQLite's standard types: TEXT, INTEGER, REAL and\n   apply semantics at the language level */\nCREATE TABLE IF NOT EXISTS user_settings (\n\tid TEXT NOT NULL,\n\tversion INTEGER NOT NULL,\n    last_version INTEGER,\n    settings TEXT,\n\t/* We also add any number of meta_ columns, but these are required */\n\tmeta_user_id TEXT NOT NULL, /* which user is this record for */\n\tmeta_role TEXT NOT NULL, /* the role of the owning user for this record */\n\t/* Records of all types tend to be accessed by (user_id, id) tuple\n     and SQLite recommends against using common values as index prefixes */\n\tCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"INSERT OR IGNORE INTO user_settings\nSELECT\n\tjson_extract(record_value, '$.value.id') as id,\n\tjson_extract(record_value, '$.value.version') as version,\n\tjson_extract(record_value, '$.value.last_version') as last_version,\n\tjson_extract(record_value, '$.value.settings') as settings,\n\tuser_id as meta_user_id,\n\tjson_extract(record_value, '$.role') as meta_role\nFROM records\nWHERE record_table = 'user_settings'"},{sql:"DELETE FROM records WHERE record_table = 'user_settings'"}]},{id:32,description:"notification",statements:[{sql:"CREATE TABLE IF NOT EXISTS notification (\n \tid TEXT NOT NULL,\n \tversion INTEGER NOT NULL,\n    last_version INTEGER,\n    user_id TEXT NOT NULL,\n    activity_id TEXT NOT NULL,\n    received INTEGER NOT NULL,\n    read INTEGER NOT NULL,\n    visited INTEGER NOT NULL,\n    emailed INTEGER NOT NULL,\n    invalid INTEGER NOT NULL,\n    space_id TEXT NOT NULL,\n    navigable_block_id TEXT,\n    collection_id TEXT,\n    type TEXT NOT NULL,\n    end_time TEXT NOT NULL,\n    channel TEXT,\n    archived_at INTEGER,\n \tmeta_user_id TEXT NOT NULL, /* which user is this record for */\n \tmeta_role TEXT NOT NULL, /* the role of the owning user for this record */\n \t/* Records of all types tend to be accessed by (user_id, id) tuple\n      and SQLite recommends against using common values as index prefixes */\n \tCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n )"},{sql:" INSERT OR IGNORE INTO notification\n SELECT\n \tjson_extract(record_value, '$.value.id') as id,\n \tjson_extract(record_value, '$.value.version') as version,\n \tjson_extract(record_value, '$.value.last_version') as last_version,\n    json_extract(record_value, '$.value.user_id') as user_id,\n    json_extract(record_value, '$.value.activity_id') as activity_id,\n    json_extract(record_value, '$.value.received') as received,\n    json_extract(record_value, '$.value.read') as read,\n    json_extract(record_value, '$.value.visited') as visited,\n    json_extract(record_value, '$.value.emailed') as emailed,\n    json_extract(record_value, '$.value.invalid') as invalid,\n    json_extract(record_value, '$.value.space_id') as space_id,\n    json_extract(record_value, '$.value.navigable_block_id') as navigable_block_id,\n    json_extract(record_value, '$.value.collection_id') as collection_id,\n    json_extract(record_value, '$.value.type') as type,\n    json_extract(record_value, '$.value.end_time') as end_time,\n    json_extract(record_value, '$.value.channel') as channel,\n    json_extract(record_value, '$.value.archived_at') as archived_at,\n \tuser_id as meta_user_id,\n \tjson_extract(record_value, '$.role') as meta_role\n FROM records\n WHERE record_table = 'notification'"},{sql:" DELETE FROM records WHERE record_table = 'notification'"}]},{id:33,description:"comments-discussions-reactions-migration",statements:[{sql:"CREATE TABLE IF NOT EXISTS discussion (\n \tid TEXT NOT NULL,\n    version INTEGER NOT NULL,\n    last_version INTEGER,\n    parent_id TEXT NOT NULL,\n    parent_table TEXT NOT NULL,\n    context TEXT,\n    resolved INTEGER NOT NULL,\n    comments TEXT,\n    space_id TEXT NOT NULL,\n \tmeta_user_id TEXT NOT NULL, /* which user is this record for */\n \tmeta_role TEXT NOT NULL, /* the role of the owning user for this record */\n \tCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n )"},{sql:" INSERT OR IGNORE INTO discussion\n SELECT\n \tjson_extract(record_value, '$.value.id') as id,\n    json_extract(record_value, '$.value.version') as version,\n    json_extract(record_value, '$.value.last_version') as last_version,\n    json_extract(record_value, '$.value.parent_id') as parent_id,\n    json_extract(record_value, '$.value.parent_table') as parent_table,\n    json_extract(record_value, '$.value.context') as context,\n    json_extract(record_value, '$.value.resolved') as resolved,\n    json_extract(record_value, '$.value.comments') as comments,\n    json_extract(record_value, '$.value.space_id') as space_id,\n \tuser_id as meta_user_id,\n \tjson_extract(record_value, '$.role') as meta_role\n FROM records\n WHERE record_table = 'discussion'"},{sql:" DELETE FROM records WHERE record_table = 'discussion'"},{sql:" CREATE TABLE IF NOT EXISTS comment (\n \tid TEXT NOT NULL,\n    version INTEGER NOT NULL,\n    last_version INTEGER,\n    parent_id TEXT NOT NULL,\n    parent_table TEXT NOT NULL,\n    text TEXT,\n    created_time REAL NOT NULL,\n    last_edited_time REAL,\n    alive INTEGER NOT NULL,\n    created_by_table TEXT,\n    created_by_id TEXT,\n    space_id TEXT NOT NULL,\n    content TEXT,\n    reactions TEXT,\n \tmeta_user_id TEXT NOT NULL, /* which user is this record for */\n \tmeta_role TEXT NOT NULL, /* the role of the owning user for this record */\n \tCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n )"},{sql:" INSERT OR IGNORE INTO comment\n SELECT\n \tjson_extract(record_value, '$.value.id') as id,\n    json_extract(record_value, '$.value.version') as version,\n    json_extract(record_value, '$.value.last_version') as last_version,\n    json_extract(record_value, '$.value.parent_id') as parent_id,\n    json_extract(record_value, '$.value.parent_table') as parent_table,\n    json_extract(record_value, '$.value.text') as text,\n    json_extract(record_value, '$.value.created_time') as created_time,\n    json_extract(record_value, '$.value.last_edited_time') as last_edited_time,\n    json_extract(record_value, '$.value.alive') as alive,\n    json_extract(record_value, '$.value.created_by_table') as created_by_table,\n    json_extract(record_value, '$.value.created_by_id') as created_by_id,\n    json_extract(record_value, '$.value.space_id') as space_id,\n    json_extract(record_value, '$.value.content') as content,\n    json_extract(record_value, '$.value.reactions') as reactions,\n \tuser_id as meta_user_id,\n \tjson_extract(record_value, '$.role') as meta_role\n FROM records\n WHERE record_table = 'comment'"},{sql:" DELETE FROM records WHERE record_table = 'comment'"},{sql:" CREATE TABLE IF NOT EXISTS reaction (\n \tid TEXT NOT NULL,\n    space_id TEXT NOT NULL,\n    version INTEGER NOT NULL,\n    last_version INTEGER,\n    created_time REAL,\n    parent_table TEXT NOT NULL,\n    parent_id TEXT NOT NULL,\n    icon TEXT NOT NULL,\n    actors TEXT,\n \tmeta_user_id TEXT NOT NULL, /* which user is this record for */\n \tmeta_role TEXT NOT NULL, /* the role of the owning user for this record */\n \tCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n )"},{sql:" INSERT OR IGNORE INTO reaction\n SELECT\n \tjson_extract(record_value, '$.value.id') as id,\n    json_extract(record_value, '$.value.space_id') as space_id,\n    json_extract(record_value, '$.value.version') as version,\n    json_extract(record_value, '$.value.last_version') as last_version,\n    json_extract(record_value, '$.value.created_time') as created_time,\n    json_extract(record_value, '$.value.parent_table') as parent_table,\n    json_extract(record_value, '$.value.parent_id') as parent_id,\n    json_extract(record_value, '$.value.icon') as icon,\n    json_extract(record_value, '$.value.actors') as actors,\n \tuser_id as meta_user_id,\n \tjson_extract(record_value, '$.role') as meta_role\n FROM records\n WHERE record_table = 'reaction'"},{sql:" DELETE FROM records WHERE record_table = 'reaction'"}]},{id:34,description:"add-discussion-id-to-notification",statements:[{sql:"ALTER TABLE notification\nADD COLUMN discussion_id TEXT"}]},{id:35,description:"add-suggested-questions-column-to-spaceview",statements:[{sql:"ALTER TABLE space_view\nADD COLUMN qna_suggested_questions TEXT"},{sql:"ALTER TABLE space_view\nADD COLUMN qna_suggested_questions_last_updated_time BIGINT"}]},{id:36,description:"add-ai-suggestions-column-to-space-view-table",statements:[{sql:"ALTER TABLE space_view\nADD COLUMN ai_suggestions TEXT"}]},{id:37,description:"create-space-user-table",statements:[{sql:"CREATE TABLE IF NOT EXISTS space_user (\n    id TEXT NOT NULL,\n    version REAL NOT NULL,\n    user_id TEXT NOT NULL,\n    space_id TEXT NOT NULL,\n    invite_id TEXT,\n    role TEXT NOT NULL,\n    meta_user_id TEXT NOT NULL,\n    meta_role TEXT NOT NULL,\n    CONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n )"},{sql:"INSERT OR IGNORE INTO space_user\nSELECT\n    json_extract(record_value, '$.value.id') as id,\n    json_extract(record_value, '$.value.version') as version,\n    json_extract(record_value, '$.value.user_id') as user_id,\n    json_extract(record_value, '$.value.space_id') as space_id,\n    json_extract(record_value, '$.value.invite_id') as invite_id,\n    json_extract(record_value, '$.value.membership_type') as role,\n    user_id as meta_user_id,\n    json_extract(record_value, '$.role') as meta_role\nFROM records\nWHERE record_table = 'space_user'"},{sql:"DELETE FROM records WHERE record_table = 'space_user'"}]},{id:38,description:"drop-deprecated-suggested-qs-cols",statements:[{sql:"ALTER TABLE space_view\nDROP qna_suggested_questions"},{sql:"ALTER TABLE space_view\nDROP qna_suggested_questions_last_updated_time"}]},{id:39,description:"rename-space-user-role-to-membership",statements:[{sql:"ALTER TABLE space_user RENAME COLUMN role TO membership_type"}]},{id:40,description:"add-type-column-in-discussion",statements:[{sql:"ALTER TABLE discussion ADD COLUMN type TEXT"}]},{id:41,description:"add-discussion-reactions",statements:[{sql:"ALTER TABLE discussion ADD COLUMN reactions TEXT"}]},{id:42,description:"add-sidebar-order-column-to-space-view",statements:[{sql:"ALTER TABLE space_view ADD COLUMN sidebar_order TEXT"}]},{id:43,description:"add-space-short-id",statements:[{sql:"ALTER TABLE space ADD COLUMN short_id NUMBER"}]},{id:44,description:"add-trash-metadata-to-block",statements:[{sql:"ALTER TABLE block ADD COLUMN moved_to_trash_table TEXT"},{sql:"ALTER TABLE block ADD COLUMN moved_to_trash_id TEXT"},{sql:"ALTER TABLE block ADD COLUMN moved_to_trash_time BIGINT"},{sql:"ALTER TABLE block ADD COLUMN deleted_from_trash_time BIGINT"}]},{id:45,description:"add-shared-pages-manual-sort-to-space-view",statements:[{sql:"ALTER TABLE space_view ADD COLUMN shared_pages_manual_sort TEXT"}]},{id:46,description:"add-space-permanently-deleted-time",statements:[{sql:"ALTER TABLE space ADD COLUMN permanently_deleted_time NUMBER"}]},{id:47,description:"add-deleted-from-trash-metadata-to-block",statements:[{sql:"ALTER TABLE block ADD COLUMN deleted_from_trash_table TEXT"},{sql:"ALTER TABLE block ADD COLUMN deleted_from_trash_id TEXT"}]},{id:48,description:"add-non-content-children-to-block",statements:[{sql:"ALTER TABLE block ADD COLUMN non_content_children TEXT"}]},{id:49,description:"add-propertyid-column-to-discussion",statements:[{sql:"ALTER TABLE discussion ADD COLUMN property_id text"}]},{id:50,description:"add-space-short-id-str",statements:[{sql:"ALTER TABLE space ADD COLUMN short_id_str TEXT"}]},{id:51,description:"add-first-joined-space-time-to-space-view",statements:[{sql:"ALTER TABLE space_view ADD COLUMN first_joined_space_time NUMBER"}]},{id:52,description:"add-assistant-session-starters-column-to-spaceview",statements:[{sql:"ALTER TABLE space_view ADD COLUMN assistant_session_starters TEXT"}]},{id:53,description:"extract-space-permission-group-tables",statements:[{sql:"CREATE TABLE IF NOT EXISTS space_permission_group (\n    id TEXT NOT NULL,\n    version INTEGER NOT NULL,\n    last_version INTEGER NOT NULL,\n    space_id TEXT NOT NULL,\n    group_id TEXT NOT NULL,\n    name TEXT NOT NULL,\n    icon TEXT,\n    created_by_id TEXT,\n    created_by_table TEXT,\n    created_at REAL,\n    last_edited_by_id TEXT,\n    last_edited_by_table TEXT,\n    last_edited_at REAL,\n    deleted_at REAL,\n    meta_user_id TEXT NOT NULL,\n    meta_role TEXT NOT NULL,\n    CONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n )"},{sql:"INSERT OR IGNORE INTO space_permission_group\nSELECT\n    json_extract(record_value, '$.value.id') as id,\n    json_extract(record_value, '$.value.version') as version,\n    json_extract(record_value, '$.value.last_version') as last_version,\n    json_extract(record_value, '$.value.space_id') as space_id,\n    json_extract(record_value, '$.value.group_id') as group_id,\n    json_extract(record_value, '$.value.name') as name,\n    json_extract(record_value, '$.value.icon') as icon,\n    json_extract(record_value, '$.value.created_by_id') as created_by_id,\n    json_extract(record_value, '$.value.created_by_table') as created_by_table,\n    json_extract(record_value, '$.value.created_at') as created_at,\n    json_extract(record_value, '$.value.last_edited_by_id') as last_edited_by_id,\n    json_extract(record_value, '$.value.last_edited_by_table') as last_edited_by_table,\n    json_extract(record_value, '$.value.last_edited_at') as last_edited_at,\n    json_extract(record_value, '$.value.deleted_at') as deleted_at,\n    user_id as meta_user_id,\n    json_extract(record_value, '$.role') as meta_role\nFROM records\nWHERE record_table = 'space_permission_group'"},{sql:"DELETE FROM records WHERE record_table = 'space_permission_group'"},{sql:"CREATE TABLE IF NOT EXISTS space_permission_group_member (\n    id TEXT NOT NULL,\n    version INTEGER NOT NULL,\n    last_version INTEGER NOT NULL,\n    space_id TEXT NOT NULL,\n    space_permission_group_id TEXT NOT NULL,\n    user_id TEXT NOT NULL,\n    removed_at REAL,\n    meta_user_id TEXT NOT NULL,\n    meta_role TEXT NOT NULL,\n    CONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n )"},{sql:"INSERT OR IGNORE INTO space_permission_group_member\nSELECT\n    json_extract(record_value, '$.value.id') as id,\n    json_extract(record_value, '$.value.version') as version,\n    json_extract(record_value, '$.value.last_version') as last_version,\n    json_extract(record_value, '$.value.space_id') as space_id,\n    json_extract(record_value, '$.value.space_permission_group_id') as space_permission_group_id,\n    json_extract(record_value, '$.value.user_id') as user_id,\n    json_extract(record_value, '$.value.removed_at') as removed_at,\n    user_id as meta_user_id,\n    json_extract(record_value, '$.role') as meta_role\nFROM records\nWHERE record_table = 'space_permission_group_member'"},{sql:"DELETE FROM records WHERE record_table = 'space_permission_group_member'"}]},{id:54,description:"extract-custom-emoji-table",statements:[{sql:"CREATE TABLE IF NOT EXISTS custom_emoji (\n    id TEXT NOT NULL,\n    version REAL NOT NULL,\n    last_version REAL,\n    space_id TEXT NOT NULL,\n    name TEXT NOT NULL,\n    url TEXT NOT NULL,\n    file_ids TEXT,\n    created_time REAL NOT NULL,\n    created_by_id TEXT NOT NULL,\n    created_by_table TEXT NOT NULL,\n    alive INTEGER NOT NULL,\n    meta_user_id TEXT NOT NULL,\n    meta_role TEXT NOT NULL,\n    CONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"INSERT OR IGNORE INTO custom_emoji\nSELECT\n    json_extract(record_value, '$.value.id') as id,\n    json_extract(record_value, '$.value.version') as version,\n    json_extract(record_value, '$.value.last_version') as last_version,\n    json_extract(record_value, '$.value.space_id') as space_id,\n    json_extract(record_value, '$.value.name') as name,\n    json_extract(record_value, '$.value.url') as url,\n    json_extract(record_value, '$.value.file_ids') as file_ids,\n    json_extract(record_value, '$.value.created_time') as created_time,\n    json_extract(record_value, '$.value.created_by_id') as created_by_id,\n    json_extract(record_value, '$.value.created_by_table') as created_by_table,\n    json_extract(record_value, '$.value.alive') as alive,\n    user_id as meta_user_id,\n    json_extract(record_value, '$.role') as meta_role\nFROM records\nWHERE record_table = 'custom_emoji'"},{sql:"DELETE FROM records WHERE record_table = 'custom_emoji'"}]},{id:55,description:"create-the-offline",statements:[{sql:"CREATE TABLE IF NOT EXISTS offline_page (\n  id TEXT NOT NULL,\n  meta_user_id TEXT NOT NULL,\n  CONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"}]},{id:56,description:"add-last",statements:[{sql:"ALTER TABLE offline_page ADD COLUMN last_updated_at bigint"}]},{id:57,description:"fix-sqlite-discrepancies",statements:[{sql:"ALTER TABLE space_permission_group ADD COLUMN last_version_nullable INTEGER"},{sql:"UPDATE space_permission_group SET last_version_nullable = last_version"},{sql:"ALTER TABLE space_permission_group RENAME COLUMN last_version TO last_version_old"},{sql:"ALTER TABLE space_permission_group RENAME COLUMN last_version_nullable TO last_version"},{sql:"ALTER TABLE space_permission_group DROP COLUMN last_version_old"},{sql:"ALTER TABLE space_permission_group_member ADD COLUMN last_version_nullable INTEGER"},{sql:"UPDATE space_permission_group_member SET last_version_nullable = last_version"},{sql:"ALTER TABLE space_permission_group_member RENAME COLUMN last_version TO last_version_old"},{sql:"ALTER TABLE space_permission_group_member RENAME COLUMN last_version_nullable TO last_version"},{sql:"ALTER TABLE space_permission_group_member DROP COLUMN last_version_old"}]},{id:58,description:"add-block-crdt-columns",statements:[{sql:"ALTER TABLE block ADD COLUMN crdt_format_version INTEGER"},{sql:"ALTER TABLE block ADD COLUMN crdt_data TEXT"}]},{id:59,description:"drop-space-permissions-column-on-native",statements:[{sql:"ALTER TABLE space DROP COLUMN permissions"}]},{id:60,description:"add-collection-support-to-offline-page",statements:[{sql:"ALTER TABLE offline_page ADD COLUMN type TEXT"},{sql:"ALTER TABLE offline_page ADD COLUMN download_status TEXT"},{sql:"ALTER TABLE offline_page ADD COLUMN collection_status TEXT"},{sql:"ALTER TABLE offline_page ADD COLUMN offline_actions TEXT"},{sql:"CREATE INDEX IF NOT EXISTS offline_page_type_index ON offline_page (type)"},{sql:"CREATE INDEX IF NOT EXISTS offline_page_download_status_index ON offline_page (download_status)"}]},{id:61,description:"create-offline-action",statements:[{sql:"CREATE TABLE IF NOT EXISTS offline_action (\n  id TEXT NOT NULL,\n  meta_user_id TEXT NOT NULL,\n  origin_page_id TEXT NOT NULL,\n  impacted_page_id TEXT NOT NULL,\n  CONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"CREATE INDEX IF NOT EXISTS idx_offline_action_origin_page_id ON offline_action (meta_user_id, origin_page_id)"},{sql:"CREATE INDEX IF NOT EXISTS idx_offline_action_impacted_page_id ON offline_action (meta_user_id, impacted_page_id)"}]},{id:62,description:"offline",statements:[{sql:"ALTER TABLE offline_page \nRENAME COLUMN last_updated_at TO last_downloaded_at"},{sql:"ALTER TABLE offline_page\nADD COLUMN last_downloaded_version REAL"}]},{id:63,description:"change-primary-key-of-offline",statements:[{sql:"CREATE TABLE IF NOT EXISTS offline_action_new (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    meta_user_id TEXT NOT NULL,\n    origin_page_id TEXT NOT NULL,\n    impacted_page_id TEXT NOT NULL,\n    UNIQUE (origin_page_id, impacted_page_id, meta_user_id),\n    FOREIGN KEY (origin_page_id, meta_user_id) REFERENCES offline_page(id, meta_user_id),\n    FOREIGN KEY (impacted_page_id, meta_user_id) REFERENCES offline_page(id, meta_user_id)\n)"},{sql:"INSERT INTO offline_action_new\n  (meta_user_id, origin_page_id, impacted_page_id)\nSELECT DISTINCT\n  meta_user_id,\n  origin_page_id,\n  impacted_page_id\nFROM offline_action"},{sql:"DROP TABLE offline_action"},{sql:"ALTER TABLE offline_action_new RENAME TO offline_action"},{sql:"CREATE INDEX IF NOT EXISTS idx_offline_action_origin_page_id ON offline_action (meta_user_id, origin_page_id)"},{sql:"CREATE INDEX IF NOT EXISTS idx_offline_action_impacted_page_id ON offline_action (meta_user_id, impacted_page_id)"}]},{id:64,description:"add-autosync-column-to-offline-actions",statements:[{sql:"ALTER TABLE offline_action ADD COLUMN autosync_type TEXT DEFAULT NULL"}]},{id:65,description:"include-autosync",statements:[{sql:"CREATE TABLE offline_action_new (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    meta_user_id TEXT NOT NULL,\n    origin_page_id TEXT NOT NULL,\n    impacted_page_id TEXT NOT NULL,\n    autosync_type TEXT NOT NULL DEFAULT 'not_autosynced',\n    UNIQUE (origin_page_id, impacted_page_id, meta_user_id, autosync_type),\n    FOREIGN KEY (origin_page_id, meta_user_id) REFERENCES offline_page(id, meta_user_id),\n    FOREIGN KEY (impacted_page_id, meta_user_id) REFERENCES offline_page(id, meta_user_id)\n)"},{sql:"INSERT INTO offline_action_new\n  (meta_user_id, origin_page_id, impacted_page_id, autosync_type)\nSELECT DISTINCT\n  meta_user_id,\n  origin_page_id,\n  impacted_page_id,\n  COALESCE(autosync_type, 'not_autosynced')\nFROM offline_action"},{sql:"DROP TABLE offline_action"},{sql:"ALTER TABLE offline_action_new RENAME TO offline_action"},{sql:"CREATE INDEX IF NOT EXISTS idx_offline_action_origin_page_id ON offline_action (meta_user_id, origin_page_id)"},{sql:"CREATE INDEX IF NOT EXISTS idx_offline_action_impacted_page_id ON offline_action (meta_user_id, impacted_page_id)"}]},{id:66,description:"add-isundotransaction-istemplateinstantiationtransaction-to-transaction",statements:[{sql:"ALTER TABLE transactions ADD COLUMN isUndoTransaction INTEGER"},{sql:"ALTER TABLE transactions ADD COLUMN isTemplateInstantiationTransaction INTEGER"}]},{id:67,description:"create-offline-download-metadata",statements:[{sql:"CREATE TABLE IF NOT EXISTS offline_download_metadata (\n  meta_user_id TEXT NOT NULL,\n  task_type TEXT NOT NULL,\n  last_executed_at INTEGER NOT NULL,\n  CONSTRAINT primary_key PRIMARY KEY (meta_user_id, task_type)\n)"}]},{id:68,description:"addpublicsharelinkpagestospaceview",statements:[{sql:"ALTER TABLE space_view ADD COLUMN public_share_link_pages TEXT"}]},{id:69,description:"add-server-change-timestamp-to-offline-page",statements:[{sql:"ALTER TABLE offline_page\nADD COLUMN last_downloaded_record_change_timestamp INTEGER"}]},{id:70,description:"offline-action-v2",statements:[{sql:"DELETE FROM offline_action"},{sql:"DELETE FROM offline_page"},{sql:"DROP INDEX IF EXISTS offline_page_type_index"},{sql:"ALTER TABLE offline_page DROP COLUMN type"},{sql:"ALTER TABLE offline_page DROP COLUMN collection_status"},{sql:"ALTER TABLE offline_page DROP COLUMN offline_actions"},{sql:"CREATE TABLE offline_action_new (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    meta_user_id TEXT NOT NULL,\n    origin_page_id TEXT NOT NULL,\n    from_page_id TEXT NOT NULL,\n    impacted_page_id TEXT NOT NULL,\n    autosync_type TEXT NOT NULL DEFAULT 'not_autosynced',\n    UNIQUE (meta_user_id, origin_page_id, impacted_page_id, autosync_type),\n    FOREIGN KEY (origin_page_id, meta_user_id) REFERENCES offline_page(id, meta_user_id),\n    FOREIGN KEY (from_page_id, meta_user_id) REFERENCES offline_page(id, meta_user_id),\n    FOREIGN KEY (impacted_page_id, meta_user_id) REFERENCES offline_page(id, meta_user_id)\n)"},{sql:"DROP TABLE offline_action"},{sql:"ALTER TABLE offline_action_new RENAME TO offline_action"},{sql:"CREATE INDEX IF NOT EXISTS idx_offline_action_origin_page_id ON offline_action (meta_user_id, origin_page_id)"},{sql:"CREATE INDEX IF NOT EXISTS idx_offline_action_from_page_id ON offline_action (meta_user_id, from_page_id)"},{sql:"CREATE INDEX IF NOT EXISTS idx_offline_action_impacted_page_id ON offline_action (meta_user_id, impacted_page_id)"}]},{id:71,description:"create-thread-table",statements:[{sql:"CREATE TABLE IF NOT EXISTS thread (\n    id TEXT NOT NULL,\n    version REAL NOT NULL,\n    last_version REAL,\n    messages TEXT,\n    data TEXT,\n    parent_id TEXT NOT NULL,\n    parent_table TEXT NOT NULL,\n    space_id TEXT NOT NULL,\n    alive INTEGER,\n    current_inference_id TEXT,\n    current_inference_lease_expiration REAL,\n    created_time REAL NOT NULL,\n    created_by_id TEXT NOT NULL,\n    created_by_table TEXT NOT NULL,\n    file_ids TEXT,\n    created_source TEXT,\n    meta_user_id TEXT NOT NULL,\n    meta_role TEXT NOT NULL,\n    CONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"INSERT OR IGNORE INTO thread\nSELECT\n    json_extract(record_value, '$.value.id') as id,\n    json_extract(record_value, '$.value.version') as version,\n    json_extract(record_value, '$.value.last_version') as last_version,\n    json_extract(record_value, '$.value.messages') as messages,\n    json_extract(record_value, '$.value.data') as data,\n    json_extract(record_value, '$.value.parent_id') as parent_id,\n    json_extract(record_value, '$.value.parent_table') as parent_table,\n    json_extract(record_value, '$.value.space_id') as space_id,\n    json_extract(record_value, '$.value.alive') as alive,\n    json_extract(record_value, '$.value.current_inference_id') as current_inference_id,\n    json_extract(record_value, '$.value.current_inference_lease_expiration') as current_inference_lease_expiration,\n    json_extract(record_value, '$.value.created_time') as created_time,\n    json_extract(record_value, '$.value.created_by_id') as created_by_id,\n    json_extract(record_value, '$.value.created_by_table') as created_by_table,\n    json_extract(record_value, '$.value.file_ids') as file_ids,\n    json_extract(record_value, '$.value.created_source') as created_source,\n    user_id as meta_user_id,\n    json_extract(record_value, '$.role') as meta_role\nFROM records\nWHERE record_table = 'thread'"},{sql:"DELETE FROM records WHERE record_table = 'thread'"}]},{id:72,description:"extract-thread-message-table",statements:[{sql:"CREATE TABLE IF NOT EXISTS thread_message (\n    id TEXT NOT NULL,\n    version REAL NOT NULL,\n    last_version REAL,\n    step TEXT NOT NULL,\n    data TEXT,\n    parent_id TEXT NOT NULL,\n    parent_table TEXT NOT NULL,\n    space_id TEXT NOT NULL,\n    created_time REAL NOT NULL,\n    created_by_id TEXT NOT NULL,\n    created_by_table TEXT NOT NULL,\n    meta_user_id TEXT NOT NULL,\n    meta_role TEXT NOT NULL,\n    CONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"INSERT OR IGNORE INTO thread_message\nSELECT\n    json_extract(record_value, '$.value.id') as id,\n    json_extract(record_value, '$.value.version') as version,\n    json_extract(record_value, '$.value.last_version') as last_version,\n    json_extract(record_value, '$.value.step') as step,\n    json_extract(record_value, '$.value.data') as data,\n    json_extract(record_value, '$.value.parent_id') as parent_id,\n    json_extract(record_value, '$.value.parent_table') as parent_table,\n    json_extract(record_value, '$.value.space_id') as space_id,\n    json_extract(record_value, '$.value.created_time') as created_time,\n    json_extract(record_value, '$.value.created_by_id') as created_by_id,\n    json_extract(record_value, '$.value.created_by_table') as created_by_table,\n    user_id as meta_user_id,\n    json_extract(record_value, '$.role') as meta_role\nFROM records\nWHERE record_table = 'thread_message'"},{sql:"DELETE FROM records WHERE record_table = 'thread_message'"}]},{id:73,description:"add-referral-id-column-to-space-sql-lite",statements:[{sql:"ALTER TABLE space ADD COLUMN referral_id TEXT DEFAULT NULL"}]},{id:74,description:"add-children-and-parent-to-notification",statements:[{sql:"ALTER TABLE notification ADD COLUMN activity_id_nullable TEXT"},{sql:"UPDATE notification SET activity_id_nullable = activity_id"},{sql:"ALTER TABLE notification DROP COLUMN activity_id"},{sql:"ALTER TABLE notification RENAME COLUMN activity_id_nullable TO activity_id"},{sql:"ALTER TABLE notification ADD COLUMN parent_notification_id TEXT"},{sql:"ALTER TABLE notification ADD COLUMN child_notification_ids TEXT"}]},{id:75,description:"add-display-name-to-comment",statements:[{sql:"ALTER TABLE comment ADD COLUMN display_name TEXT"}]}],fastForward:{id:75,description:"fast-forward-to-add-display-name-to-comment",statements:[{sql:"CREATE TABLE notion (id integer primary key, key unique, value)"},{sql:"CREATE TABLE key_value_store (id INTEGER PRIMARY KEY, key TEXT UNIQUE, value TEXT)"},{sql:"CREATE TABLE records (\nrecord_table TEXT,\nrecord_id TEXT,\nrecord_value TEXT,\ntimestamp NUMERIC,\nparent_table TEXT,\nparent_id TEXT,\nimportance NUMERIC,\nuser_id TEXT, is_offline, space_id TEXT,\nCONSTRAINT primary_key PRIMARY KEY (record_table, record_id, user_id)\n)"},{sql:"CREATE TABLE block (\nid TEXT NOT NULL,\nspace_id TEXT NOT NULL,\nversion REAL NOT NULL,\nlast_version REAL,\ntype TEXT NOT NULL,\nproperties TEXT,\ncontent TEXT,\ndiscussions TEXT,\nview_ids TEXT,\ncollection_id TEXT,\npermissions TEXT,\ncreated_time REAL,\nlast_edited_time REAL,\ncopied_from TEXT,\nfile_ids TEXT,\nignore_block_count INTEGER,\nis_template INTEGER,\nparent_id TEXT,\nparent_table TEXT,\nalive INTEGER NOT NULL,\nmoved TEXT,\nformat TEXT,\ncreated_by TEXT,\nlast_edited_by TEXT,\ncreated_by_table TEXT,\ncreated_by_id TEXT,\nlast_edited_by_table TEXT,\nlast_edited_by_id TEXT,\ncontent_classification TEXT,\nmeta_user_id TEXT NOT NULL,\nmeta_last_access_timestamp REAL NOT NULL,\nmeta_role TEXT, moved_to_trash_table TEXT, moved_to_trash_id TEXT, moved_to_trash_time BIGINT, deleted_from_trash_time BIGINT, deleted_from_trash_table TEXT, deleted_from_trash_id TEXT, non_content_children TEXT, crdt_format_version INTEGER, crdt_data TEXT,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"CREATE TABLE space (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nlast_version REAL,\nname TEXT,\npermission_groups TEXT,\nemail_domains TEXT,\npages TEXT,\nicon TEXT,\ndisable_public_access INTEGER,\ndisable_public_access_requests INTEGER,\ndisable_guests INTEGER,\ndisable_move_to_space INTEGER,\ndisable_export INTEGER,\ndisable_space_page_edits INTEGER,\nbeta_enabled INTEGER,\ncreated_time REAL,\nlast_edited_time REAL,\ndeleted_by TEXT,\ncreated_by_table TEXT,\ncreated_by_id TEXT,\nlast_edited_by_table TEXT,\nlast_edited_by_id TEXT,\nadmin_disable_public_access INTEGER,\nspace_pages TEXT,\nplan_type TEXT,\ninvite_link_enabled INTEGER,\ninitial_use_cases TEXT,\npublic_home_page TEXT,\nbot_settings TEXT,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT, settings TEXT, subscription_tier TEXT, disable_team_creation BOOLEAN, overdue_subscription TEXT, short_id NUMBER, permanently_deleted_time NUMBER, short_id_str TEXT, referral_id TEXT DEFAULT NULL,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"CREATE TABLE space_view (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nlast_version REAL,\nspace_id TEXT NOT NULL,\nbookmarked_pages TEXT,\nshared_pages TEXT,\nvisited_templates TEXT,\nsidebar_hidden_templates TEXT,\nnotify_mobile INTEGER NOT NULL,\nnotify_desktop INTEGER NOT NULL,\nnotify_email INTEGER NOT NULL,\nnotify_email_always INTEGER,\ncreated_getting_started INTEGER,\nparent_id TEXT NOT NULL,\nparent_table TEXT NOT NULL,\nalive INTEGER NOT NULL,\ncreated_onboarding_templates INTEGER,\nprivate_pages TEXT,\njoined INTEGER,\njoined_teams TEXT,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT, settings TEXT, ai_suggestions TEXT, sidebar_order TEXT, shared_pages_manual_sort TEXT, first_joined_space_time NUMBER, assistant_session_starters TEXT, public_share_link_pages TEXT,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"CREATE TABLE transactions (\nid TEXT NOT NULL,\nuser_id TEXT,\nspace_id TEXT,\noperations TEXT NOT NULL,\ntimestamp REAL NOT NULL\n, debug TEXT, isUndoTransaction INTEGER, isTemplateInstantiationTransaction INTEGER)"},{sql:"CREATE TABLE user_root (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nspace_views TEXT,\nleft_spaces TEXT,\nspace_view_pointers TEXT,\ndeleted_email TEXT,\nlast_version REAL,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT NOT NULL,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"CREATE TABLE notion_user (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nlast_version REAL,\nemail TEXT NOT NULL,\ngiven_name TEXT,\nfamily_name TEXT,\nname TEXT,\nprofile_photo TEXT,\nonboarding_completed INTEGER,\nmobile_onboarding_completed INTEGER,\nclipper_onboarding_completed INTEGER,\nreverify INTEGER,\nis_banned INTEGER,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT NOT NULL, suspended_time REAL,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:'CREATE TABLE IF NOT EXISTS "collection_view" (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nlast_version REAL,\ntype TEXT NOT NULL,\nname TEXT,\nicon TEXT,\npage_sort TEXT,\nparent_id TEXT NOT NULL,\nparent_table TEXT NOT NULL,\nalive INTEGER NOT NULL,\nformat TEXT,\nquery2 TEXT,\nspace_id TEXT NOT NULL,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT NOT NULL,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)'},{sql:"CREATE TABLE collection (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nlast_version REAL,\nname TEXT,\ndescription TEXT,\nicon TEXT,\ncover TEXT,\nschema TEXT,\nformat TEXT,\nparent_id TEXT NOT NULL,\nparent_table TEXT NOT NULL,\nalive INTEGER NOT NULL,\nfile_ids TEXT,\ntemplate_pages TEXT,\ncopied_from TEXT,\nmigrated INTEGER,\nspace_id TEXT NOT NULL,\ndeleted_schema TEXT,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT NOT NULL,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"CREATE TABLE team (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nlast_version REAL,\nspace_id TEXT NOT NULL,\nname TEXT NOT NULL,\ndescription TEXT,\nicon TEXT,\ncreated_time REAL NOT NULL,\ncreated_by_table TEXT NOT NULL,\ncreated_by_id TEXT NOT NULL,\nlast_edited_time REAL,\nlast_edited_by_table TEXT,\nlast_edited_by_id TEXT,\narchived_by TEXT,\nteam_pages TEXT,\nparent_id TEXT NOT NULL,\nparent_table TEXT NOT NULL,\nsettings TEXT,\nis_default INTEGER,\nmembership TEXT,\npermissions TEXT,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT, pinned_pages TEXT, archived_at REAL,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"CREATE TABLE user_settings (\nid TEXT NOT NULL,\nversion INTEGER NOT NULL,\nlast_version INTEGER,\nsettings TEXT,\n/* We also add any number of meta_ columns, but these are required */\nmeta_user_id TEXT NOT NULL, /* which user is this record for */\nmeta_role TEXT NOT NULL, /* the role of the owning user for this record */\n/* Records of all types tend to be accessed by (user_id, id) tuple\nand SQLite recommends against using common values as index prefixes */\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"CREATE TABLE notification (\nid TEXT NOT NULL,\nversion INTEGER NOT NULL,\nlast_version INTEGER,\nuser_id TEXT NOT NULL,\nreceived INTEGER NOT NULL,\nread INTEGER NOT NULL,\nvisited INTEGER NOT NULL,\nemailed INTEGER NOT NULL,\ninvalid INTEGER NOT NULL,\nspace_id TEXT NOT NULL,\nnavigable_block_id TEXT,\ncollection_id TEXT,\ntype TEXT NOT NULL,\nend_time TEXT NOT NULL,\nchannel TEXT,\narchived_at INTEGER,\nmeta_user_id TEXT NOT NULL, /* which user is this record for */\nmeta_role TEXT NOT NULL, discussion_id TEXT, activity_id TEXT, parent_notification_id TEXT, child_notification_ids TEXT, /* the role of the owning user for this record */\n/* Records of all types tend to be accessed by (user_id, id) tuple\nand SQLite recommends against using common values as index prefixes */\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"CREATE TABLE discussion (\nid TEXT NOT NULL,\nversion INTEGER NOT NULL,\nlast_version INTEGER,\nparent_id TEXT NOT NULL,\nparent_table TEXT NOT NULL,\ncontext TEXT,\nresolved INTEGER NOT NULL,\ncomments TEXT,\nspace_id TEXT NOT NULL,\nmeta_user_id TEXT NOT NULL, /* which user is this record for */\nmeta_role TEXT NOT NULL, type TEXT, reactions TEXT, property_id text, /* the role of the owning user for this record */\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"CREATE TABLE comment (\nid TEXT NOT NULL,\nversion INTEGER NOT NULL,\nlast_version INTEGER,\nparent_id TEXT NOT NULL,\nparent_table TEXT NOT NULL,\ntext TEXT,\ncreated_time REAL NOT NULL,\nlast_edited_time REAL,\nalive INTEGER NOT NULL,\ncreated_by_table TEXT,\ncreated_by_id TEXT,\nspace_id TEXT NOT NULL,\ncontent TEXT,\nreactions TEXT,\nmeta_user_id TEXT NOT NULL, /* which user is this record for */\nmeta_role TEXT NOT NULL, display_name TEXT, /* the role of the owning user for this record */\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"CREATE TABLE reaction (\nid TEXT NOT NULL,\nspace_id TEXT NOT NULL,\nversion INTEGER NOT NULL,\nlast_version INTEGER,\ncreated_time REAL,\nparent_table TEXT NOT NULL,\nparent_id TEXT NOT NULL,\nicon TEXT NOT NULL,\nactors TEXT,\nmeta_user_id TEXT NOT NULL, /* which user is this record for */\nmeta_role TEXT NOT NULL, /* the role of the owning user for this record */\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"CREATE TABLE space_user (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nuser_id TEXT NOT NULL,\nspace_id TEXT NOT NULL,\ninvite_id TEXT,\nmembership_type TEXT NOT NULL,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT NOT NULL,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"CREATE TABLE space_permission_group (\nid TEXT NOT NULL,\nversion INTEGER NOT NULL,\nspace_id TEXT NOT NULL,\ngroup_id TEXT NOT NULL,\nname TEXT NOT NULL,\nicon TEXT,\ncreated_by_id TEXT,\ncreated_by_table TEXT,\ncreated_at REAL,\nlast_edited_by_id TEXT,\nlast_edited_by_table TEXT,\nlast_edited_at REAL,\ndeleted_at REAL,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT NOT NULL, last_version INTEGER,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"CREATE TABLE space_permission_group_member (\nid TEXT NOT NULL,\nversion INTEGER NOT NULL,\nspace_id TEXT NOT NULL,\nspace_permission_group_id TEXT NOT NULL,\nuser_id TEXT NOT NULL,\nremoved_at REAL,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT NOT NULL, last_version INTEGER,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"CREATE TABLE custom_emoji (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nlast_version REAL,\nspace_id TEXT NOT NULL,\nname TEXT NOT NULL,\nurl TEXT NOT NULL,\nfile_ids TEXT,\ncreated_time REAL NOT NULL,\ncreated_by_id TEXT NOT NULL,\ncreated_by_table TEXT NOT NULL,\nalive INTEGER NOT NULL,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT NOT NULL,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"CREATE TABLE offline_page (\nid TEXT NOT NULL,\nmeta_user_id TEXT NOT NULL, last_downloaded_at bigint, download_status TEXT, last_downloaded_version REAL, last_downloaded_record_change_timestamp INTEGER,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"CREATE TABLE offline_download_metadata (\nmeta_user_id TEXT NOT NULL,\ntask_type TEXT NOT NULL,\nlast_executed_at INTEGER NOT NULL,\nCONSTRAINT primary_key PRIMARY KEY (meta_user_id, task_type)\n)"},{sql:"CREATE TABLE IF NOT EXISTS \"offline_action\" (\nid INTEGER PRIMARY KEY AUTOINCREMENT,\nmeta_user_id TEXT NOT NULL,\norigin_page_id TEXT NOT NULL,\nfrom_page_id TEXT NOT NULL,\nimpacted_page_id TEXT NOT NULL,\nautosync_type TEXT NOT NULL DEFAULT 'not_autosynced',\nUNIQUE (meta_user_id, origin_page_id, impacted_page_id, autosync_type),\nFOREIGN KEY (origin_page_id, meta_user_id) REFERENCES offline_page(id, meta_user_id),\nFOREIGN KEY (from_page_id, meta_user_id) REFERENCES offline_page(id, meta_user_id),\nFOREIGN KEY (impacted_page_id, meta_user_id) REFERENCES offline_page(id, meta_user_id)\n)"},{sql:"CREATE TABLE thread (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nlast_version REAL,\nmessages TEXT,\ndata TEXT,\nparent_id TEXT NOT NULL,\nparent_table TEXT NOT NULL,\nspace_id TEXT NOT NULL,\nalive INTEGER,\ncurrent_inference_id TEXT,\ncurrent_inference_lease_expiration REAL,\ncreated_time REAL NOT NULL,\ncreated_by_id TEXT NOT NULL,\ncreated_by_table TEXT NOT NULL,\nfile_ids TEXT,\ncreated_source TEXT,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT NOT NULL,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"CREATE TABLE thread_message (\nid TEXT NOT NULL,\nversion REAL NOT NULL,\nlast_version REAL,\nstep TEXT NOT NULL,\ndata TEXT,\nparent_id TEXT NOT NULL,\nparent_table TEXT NOT NULL,\nspace_id TEXT NOT NULL,\ncreated_time REAL NOT NULL,\ncreated_by_id TEXT NOT NULL,\ncreated_by_table TEXT NOT NULL,\nmeta_user_id TEXT NOT NULL,\nmeta_role TEXT NOT NULL,\nCONSTRAINT primary_key PRIMARY KEY (id, meta_user_id)\n)"},{sql:"DELETE FROM sqlite_sequence"},{sql:"CREATE INDEX record_lru_deletion_order ON records (is_offline, importance, timestamp)"},{sql:"CREATE INDEX record_parent ON records (parent_id, user_id)"},{sql:"CREATE INDEX block_parent_id ON block (parent_id, meta_user_id)"},{sql:"CREATE INDEX lru_deletion_order ON block (meta_last_access_timestamp)"},{sql:"CREATE INDEX transactions_user_id ON transactions (user_id)"},{sql:"CREATE INDEX offline_page_download_status_index ON offline_page (download_status)"},{sql:"CREATE INDEX idx_offline_action_origin_page_id ON offline_action (meta_user_id, origin_page_id)"},{sql:"CREATE INDEX idx_offline_action_from_page_id ON offline_action (meta_user_id, from_page_id)"},{sql:"CREATE INDEX idx_offline_action_impacted_page_id ON offline_action (meta_user_id, impacted_page_id)"}]}}}}]);